2023-03-14 12:08:59,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 12:08:59,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 12:08:59,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 12:08:59,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 12:09:00,106:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-14 12:12:48,687:INFO:PyCaret ClassificationExperiment
2023-03-14 12:12:48,687:INFO:Logging name: clf-default-name
2023-03-14 12:12:48,687:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-14 12:12:48,687:INFO:version 3.0.0.rc9
2023-03-14 12:12:48,687:INFO:Initializing setup()
2023-03-14 12:12:48,688:INFO:self.USI: 28b8
2023-03-14 12:12:48,688:INFO:self._variable_keys: {'seed', 'data', 'fold_groups_param', 'X', 'html_param', 'USI', '_available_plots', 'pipeline', 'logging_param', 'X_test', 'fold_shuffle_param', 'target_param', 'memory', 'X_train', 'gpu_n_jobs_param', 'y_test', 'n_jobs_param', '_ml_usecase', 'idx', 'is_multiclass', 'exp_name_log', 'fold_generator', 'fix_imbalance', 'log_plots_param', 'y_train', 'exp_id', 'y', 'gpu_param'}
2023-03-14 12:12:48,688:INFO:Checking environment
2023-03-14 12:12:48,688:INFO:python_version: 3.10.6
2023-03-14 12:12:48,688:INFO:python_build: ('main', 'Nov 14 2022 16:10:14')
2023-03-14 12:12:48,688:INFO:machine: x86_64
2023-03-14 12:12:48,688:INFO:platform: Linux-5.19.0-35-generic-x86_64-with-glibc2.35
2023-03-14 12:12:48,689:INFO:Memory: svmem(total=16160448512, available=7806377984, percent=51.7, used=7633960960, free=374214656, active=2485030912, inactive=9965563904, buffers=432156672, cached=7720116224, shared=382164992, slab=957800448)
2023-03-14 12:12:48,690:INFO:Physical Core: 8
2023-03-14 12:12:48,690:INFO:Logical Core: 16
2023-03-14 12:12:48,690:INFO:Checking libraries
2023-03-14 12:12:48,690:INFO:System:
2023-03-14 12:12:48,690:INFO:    python: 3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
2023-03-14 12:12:48,690:INFO:executable: /home/nalaminos/Entornos/mlops-titanic/bin/python3
2023-03-14 12:12:48,690:INFO:   machine: Linux-5.19.0-35-generic-x86_64-with-glibc2.35
2023-03-14 12:12:48,690:INFO:PyCaret required dependencies:
2023-03-14 12:12:48,690:INFO:                 pip: 22.0.2
2023-03-14 12:12:48,690:INFO:          setuptools: 59.6.0
2023-03-14 12:12:48,690:INFO:             pycaret: 3.0.0rc9
2023-03-14 12:12:48,690:INFO:             IPython: 8.11.0
2023-03-14 12:12:48,690:INFO:          ipywidgets: 8.0.4
2023-03-14 12:12:48,690:INFO:                tqdm: 4.65.0
2023-03-14 12:12:48,691:INFO:               numpy: 1.23.5
2023-03-14 12:12:48,691:INFO:              pandas: 1.5.3
2023-03-14 12:12:48,691:INFO:              jinja2: 3.1.2
2023-03-14 12:12:48,691:INFO:               scipy: 1.10.1
2023-03-14 12:12:48,691:INFO:              joblib: 1.2.0
2023-03-14 12:12:48,691:INFO:             sklearn: 1.2.2
2023-03-14 12:12:48,691:INFO:                pyod: 1.0.8
2023-03-14 12:12:48,691:INFO:            imblearn: 0.10.1
2023-03-14 12:12:48,691:INFO:   category_encoders: 2.6.0
2023-03-14 12:12:48,691:INFO:            lightgbm: 3.3.5
2023-03-14 12:12:48,691:INFO:               numba: 0.56.4
2023-03-14 12:12:48,691:INFO:            requests: 2.28.2
2023-03-14 12:12:48,691:INFO:          matplotlib: 3.7.1
2023-03-14 12:12:48,691:INFO:          scikitplot: 0.3.7
2023-03-14 12:12:48,691:INFO:         yellowbrick: 1.5
2023-03-14 12:12:48,691:INFO:              plotly: 5.13.1
2023-03-14 12:12:48,691:INFO:             kaleido: 0.2.1
2023-03-14 12:12:48,691:INFO:         statsmodels: 0.13.5
2023-03-14 12:12:48,691:INFO:              sktime: 0.16.1
2023-03-14 12:12:48,691:INFO:               tbats: 1.1.2
2023-03-14 12:12:48,691:INFO:            pmdarima: 2.0.2
2023-03-14 12:12:48,691:INFO:              psutil: 5.9.4
2023-03-14 12:12:48,691:INFO:PyCaret optional dependencies:
2023-03-14 12:12:48,694:INFO:                shap: Not installed
2023-03-14 12:12:48,694:INFO:           interpret: Not installed
2023-03-14 12:12:48,694:INFO:                umap: Not installed
2023-03-14 12:12:48,694:INFO:    pandas_profiling: Not installed
2023-03-14 12:12:48,694:INFO:  explainerdashboard: Not installed
2023-03-14 12:12:48,694:INFO:             autoviz: Not installed
2023-03-14 12:12:48,694:INFO:           fairlearn: Not installed
2023-03-14 12:12:48,695:INFO:             xgboost: Not installed
2023-03-14 12:12:48,695:INFO:            catboost: Not installed
2023-03-14 12:12:48,695:INFO:              kmodes: Not installed
2023-03-14 12:12:48,695:INFO:             mlxtend: Not installed
2023-03-14 12:12:48,695:INFO:       statsforecast: Not installed
2023-03-14 12:12:48,695:INFO:        tune_sklearn: Not installed
2023-03-14 12:12:48,695:INFO:                 ray: Not installed
2023-03-14 12:12:48,695:INFO:            hyperopt: Not installed
2023-03-14 12:12:48,695:INFO:              optuna: Not installed
2023-03-14 12:12:48,695:INFO:               skopt: Not installed
2023-03-14 12:12:48,695:INFO:              mlflow: Not installed
2023-03-14 12:12:48,695:INFO:              gradio: Not installed
2023-03-14 12:12:48,695:INFO:             fastapi: Not installed
2023-03-14 12:12:48,695:INFO:             uvicorn: Not installed
2023-03-14 12:12:48,695:INFO:              m2cgen: Not installed
2023-03-14 12:12:48,695:INFO:           evidently: Not installed
2023-03-14 12:12:48,695:INFO:               fugue: Not installed
2023-03-14 12:12:48,695:INFO:           streamlit: Not installed
2023-03-14 12:12:48,695:INFO:             prophet: Not installed
2023-03-14 12:12:48,695:INFO:None
2023-03-14 12:12:48,695:INFO:Set up data.
2023-03-14 12:12:48,708:INFO:Set up train/test split.
2023-03-14 12:12:48,717:INFO:Set up index.
2023-03-14 12:12:48,717:INFO:Set up folding strategy.
2023-03-14 12:12:48,717:INFO:Assigning column types.
2023-03-14 12:12:48,721:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-14 12:12:48,793:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-14 12:12:48,796:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 12:12:48,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:48,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:48,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-14 12:12:48,920:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 12:12:48,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:48,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:48,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-14 12:12:49,023:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 12:12:49,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,125:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 12:12:49,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,165:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-14 12:12:49,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:49,370:INFO:Preparing preprocessing pipeline...
2023-03-14 12:12:49,372:INFO:Set up label encoding.
2023-03-14 12:12:49,372:INFO:Set up simple imputation.
2023-03-14 12:12:49,375:INFO:Set up encoding of ordinal features.
2023-03-14 12:12:49,377:INFO:Set up encoding of categorical features.
2023-03-14 12:12:49,496:INFO:Finished creating preprocessing pipeline.
2023-03-14 12:12:49,514:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-03-14 12:12:49,514:INFO:Creating final display dataframe.
2023-03-14 12:12:50,103:INFO:Setup _display_container:                     Description             Value
0                    Session id               438
1                        Target             alive
2                   Target type            Binary
3                Target mapping     no: 0, yes: 1
4           Original data shape         (891, 15)
5        Transformed data shape         (891, 29)
6   Transformed train set shape         (623, 29)
7    Transformed test set shape         (268, 29)
8              Ordinal features                 1
9              Numeric features                 6
10         Categorical features                 6
11     Rows with missing values             79.6%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              28b8
2023-03-14 12:12:50,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:50,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:50,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:50,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 12:12:50,319:INFO:setup() successfully completed in 1.63s...............
2023-03-14 12:48:09,393:INFO:Initializing compare_models()
2023-03-14 12:48:09,394:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-03-14 12:48:09,394:INFO:Checking exceptions
2023-03-14 12:48:09,399:INFO:Preparing display monitor
2023-03-14 12:48:09,426:INFO:Initializing Logistic Regression
2023-03-14 12:48:09,426:INFO:Total runtime is 4.04516855875651e-06 minutes
2023-03-14 12:48:09,429:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:09,430:INFO:Initializing create_model()
2023-03-14 12:48:09,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:09,430:INFO:Checking exceptions
2023-03-14 12:48:09,430:INFO:Importing libraries
2023-03-14 12:48:09,430:INFO:Copying training dataset
2023-03-14 12:48:09,434:INFO:Defining folds
2023-03-14 12:48:09,434:INFO:Declaring metric variables
2023-03-14 12:48:09,436:INFO:Importing untrained model
2023-03-14 12:48:09,439:INFO:Logistic Regression Imported successfully
2023-03-14 12:48:09,444:INFO:Starting cross validation
2023-03-14 12:48:09,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:11,497:INFO:Calculating mean and std
2023-03-14 12:48:11,499:INFO:Creating metrics dataframe
2023-03-14 12:48:11,505:INFO:Uploading results into container
2023-03-14 12:48:11,506:INFO:Uploading model into container now
2023-03-14 12:48:11,507:INFO:_master_model_container: 1
2023-03-14 12:48:11,507:INFO:_display_container: 2
2023-03-14 12:48:11,507:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 12:48:11,507:INFO:create_model() successfully completed......................................
2023-03-14 12:48:11,599:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:11,599:INFO:Creating metrics dataframe
2023-03-14 12:48:11,607:INFO:Initializing K Neighbors Classifier
2023-03-14 12:48:11,607:INFO:Total runtime is 0.03635551929473877 minutes
2023-03-14 12:48:11,609:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:11,610:INFO:Initializing create_model()
2023-03-14 12:48:11,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:11,610:INFO:Checking exceptions
2023-03-14 12:48:11,610:INFO:Importing libraries
2023-03-14 12:48:11,610:INFO:Copying training dataset
2023-03-14 12:48:11,613:INFO:Defining folds
2023-03-14 12:48:11,614:INFO:Declaring metric variables
2023-03-14 12:48:11,616:INFO:Importing untrained model
2023-03-14 12:48:11,619:INFO:K Neighbors Classifier Imported successfully
2023-03-14 12:48:11,624:INFO:Starting cross validation
2023-03-14 12:48:11,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:13,141:INFO:Calculating mean and std
2023-03-14 12:48:13,143:INFO:Creating metrics dataframe
2023-03-14 12:48:13,146:INFO:Uploading results into container
2023-03-14 12:48:13,146:INFO:Uploading model into container now
2023-03-14 12:48:13,147:INFO:_master_model_container: 2
2023-03-14 12:48:13,147:INFO:_display_container: 2
2023-03-14 12:48:13,147:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-03-14 12:48:13,147:INFO:create_model() successfully completed......................................
2023-03-14 12:48:13,215:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:13,216:INFO:Creating metrics dataframe
2023-03-14 12:48:13,223:INFO:Initializing Naive Bayes
2023-03-14 12:48:13,223:INFO:Total runtime is 0.06329156557718912 minutes
2023-03-14 12:48:13,226:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:13,226:INFO:Initializing create_model()
2023-03-14 12:48:13,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:13,226:INFO:Checking exceptions
2023-03-14 12:48:13,226:INFO:Importing libraries
2023-03-14 12:48:13,226:INFO:Copying training dataset
2023-03-14 12:48:13,229:INFO:Defining folds
2023-03-14 12:48:13,229:INFO:Declaring metric variables
2023-03-14 12:48:13,232:INFO:Importing untrained model
2023-03-14 12:48:13,235:INFO:Naive Bayes Imported successfully
2023-03-14 12:48:13,239:INFO:Starting cross validation
2023-03-14 12:48:13,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:13,682:INFO:Calculating mean and std
2023-03-14 12:48:13,684:INFO:Creating metrics dataframe
2023-03-14 12:48:13,687:INFO:Uploading results into container
2023-03-14 12:48:13,687:INFO:Uploading model into container now
2023-03-14 12:48:13,687:INFO:_master_model_container: 3
2023-03-14 12:48:13,687:INFO:_display_container: 2
2023-03-14 12:48:13,688:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-03-14 12:48:13,688:INFO:create_model() successfully completed......................................
2023-03-14 12:48:13,752:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:13,753:INFO:Creating metrics dataframe
2023-03-14 12:48:13,761:INFO:Initializing Decision Tree Classifier
2023-03-14 12:48:13,762:INFO:Total runtime is 0.07226804892222086 minutes
2023-03-14 12:48:13,764:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:13,764:INFO:Initializing create_model()
2023-03-14 12:48:13,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:13,764:INFO:Checking exceptions
2023-03-14 12:48:13,764:INFO:Importing libraries
2023-03-14 12:48:13,764:INFO:Copying training dataset
2023-03-14 12:48:13,768:INFO:Defining folds
2023-03-14 12:48:13,769:INFO:Declaring metric variables
2023-03-14 12:48:13,771:INFO:Importing untrained model
2023-03-14 12:48:13,773:INFO:Decision Tree Classifier Imported successfully
2023-03-14 12:48:13,779:INFO:Starting cross validation
2023-03-14 12:48:13,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:14,237:INFO:Calculating mean and std
2023-03-14 12:48:14,238:INFO:Creating metrics dataframe
2023-03-14 12:48:14,241:INFO:Uploading results into container
2023-03-14 12:48:14,241:INFO:Uploading model into container now
2023-03-14 12:48:14,242:INFO:_master_model_container: 4
2023-03-14 12:48:14,242:INFO:_display_container: 2
2023-03-14 12:48:14,242:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=438, splitter='best')
2023-03-14 12:48:14,242:INFO:create_model() successfully completed......................................
2023-03-14 12:48:14,307:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:14,307:INFO:Creating metrics dataframe
2023-03-14 12:48:14,314:INFO:Initializing SVM - Linear Kernel
2023-03-14 12:48:14,315:INFO:Total runtime is 0.08148332834243774 minutes
2023-03-14 12:48:14,317:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:14,317:INFO:Initializing create_model()
2023-03-14 12:48:14,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:14,317:INFO:Checking exceptions
2023-03-14 12:48:14,317:INFO:Importing libraries
2023-03-14 12:48:14,317:INFO:Copying training dataset
2023-03-14 12:48:14,320:INFO:Defining folds
2023-03-14 12:48:14,320:INFO:Declaring metric variables
2023-03-14 12:48:14,322:INFO:Importing untrained model
2023-03-14 12:48:14,325:INFO:SVM - Linear Kernel Imported successfully
2023-03-14 12:48:14,330:INFO:Starting cross validation
2023-03-14 12:48:14,331:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:14,678:INFO:Calculating mean and std
2023-03-14 12:48:14,680:INFO:Creating metrics dataframe
2023-03-14 12:48:14,682:INFO:Uploading results into container
2023-03-14 12:48:14,683:INFO:Uploading model into container now
2023-03-14 12:48:14,683:INFO:_master_model_container: 5
2023-03-14 12:48:14,683:INFO:_display_container: 2
2023-03-14 12:48:14,683:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=438, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-14 12:48:14,683:INFO:create_model() successfully completed......................................
2023-03-14 12:48:14,748:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:14,748:INFO:Creating metrics dataframe
2023-03-14 12:48:14,755:INFO:Initializing Ridge Classifier
2023-03-14 12:48:14,756:INFO:Total runtime is 0.08883334795633951 minutes
2023-03-14 12:48:14,758:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:14,759:INFO:Initializing create_model()
2023-03-14 12:48:14,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:14,759:INFO:Checking exceptions
2023-03-14 12:48:14,759:INFO:Importing libraries
2023-03-14 12:48:14,759:INFO:Copying training dataset
2023-03-14 12:48:14,763:INFO:Defining folds
2023-03-14 12:48:14,763:INFO:Declaring metric variables
2023-03-14 12:48:14,765:INFO:Importing untrained model
2023-03-14 12:48:14,768:INFO:Ridge Classifier Imported successfully
2023-03-14 12:48:14,773:INFO:Starting cross validation
2023-03-14 12:48:14,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:15,125:INFO:Calculating mean and std
2023-03-14 12:48:15,127:INFO:Creating metrics dataframe
2023-03-14 12:48:15,129:INFO:Uploading results into container
2023-03-14 12:48:15,130:INFO:Uploading model into container now
2023-03-14 12:48:15,130:INFO:_master_model_container: 6
2023-03-14 12:48:15,130:INFO:_display_container: 2
2023-03-14 12:48:15,130:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=438, solver='auto',
                tol=0.0001)
2023-03-14 12:48:15,130:INFO:create_model() successfully completed......................................
2023-03-14 12:48:15,194:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:15,194:INFO:Creating metrics dataframe
2023-03-14 12:48:15,203:INFO:Initializing Random Forest Classifier
2023-03-14 12:48:15,203:INFO:Total runtime is 0.09628861745198568 minutes
2023-03-14 12:48:15,206:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:15,206:INFO:Initializing create_model()
2023-03-14 12:48:15,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:15,206:INFO:Checking exceptions
2023-03-14 12:48:15,206:INFO:Importing libraries
2023-03-14 12:48:15,206:INFO:Copying training dataset
2023-03-14 12:48:15,210:INFO:Defining folds
2023-03-14 12:48:15,210:INFO:Declaring metric variables
2023-03-14 12:48:15,213:INFO:Importing untrained model
2023-03-14 12:48:15,216:INFO:Random Forest Classifier Imported successfully
2023-03-14 12:48:15,222:INFO:Starting cross validation
2023-03-14 12:48:15,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:16,230:INFO:Calculating mean and std
2023-03-14 12:48:16,231:INFO:Creating metrics dataframe
2023-03-14 12:48:16,233:INFO:Uploading results into container
2023-03-14 12:48:16,234:INFO:Uploading model into container now
2023-03-14 12:48:16,235:INFO:_master_model_container: 7
2023-03-14 12:48:16,235:INFO:_display_container: 2
2023-03-14 12:48:16,235:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=438, verbose=0, warm_start=False)
2023-03-14 12:48:16,235:INFO:create_model() successfully completed......................................
2023-03-14 12:48:16,303:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:16,303:INFO:Creating metrics dataframe
2023-03-14 12:48:16,312:INFO:Initializing Quadratic Discriminant Analysis
2023-03-14 12:48:16,312:INFO:Total runtime is 0.11477205355962117 minutes
2023-03-14 12:48:16,315:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:16,315:INFO:Initializing create_model()
2023-03-14 12:48:16,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:16,315:INFO:Checking exceptions
2023-03-14 12:48:16,315:INFO:Importing libraries
2023-03-14 12:48:16,315:INFO:Copying training dataset
2023-03-14 12:48:16,319:INFO:Defining folds
2023-03-14 12:48:16,320:INFO:Declaring metric variables
2023-03-14 12:48:16,322:INFO:Importing untrained model
2023-03-14 12:48:16,325:INFO:Quadratic Discriminant Analysis Imported successfully
2023-03-14 12:48:16,330:INFO:Starting cross validation
2023-03-14 12:48:16,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:16,566:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,566:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,580:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,583:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,586:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,598:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,608:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,612:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,622:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,630:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 12:48:16,870:INFO:Calculating mean and std
2023-03-14 12:48:16,870:INFO:Creating metrics dataframe
2023-03-14 12:48:16,873:INFO:Uploading results into container
2023-03-14 12:48:16,873:INFO:Uploading model into container now
2023-03-14 12:48:16,873:INFO:_master_model_container: 8
2023-03-14 12:48:16,873:INFO:_display_container: 2
2023-03-14 12:48:16,873:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-03-14 12:48:16,874:INFO:create_model() successfully completed......................................
2023-03-14 12:48:16,938:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:16,938:INFO:Creating metrics dataframe
2023-03-14 12:48:16,947:INFO:Initializing Ada Boost Classifier
2023-03-14 12:48:16,948:INFO:Total runtime is 0.12536892493565877 minutes
2023-03-14 12:48:16,952:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:16,952:INFO:Initializing create_model()
2023-03-14 12:48:16,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:16,952:INFO:Checking exceptions
2023-03-14 12:48:16,952:INFO:Importing libraries
2023-03-14 12:48:16,952:INFO:Copying training dataset
2023-03-14 12:48:16,957:INFO:Defining folds
2023-03-14 12:48:16,957:INFO:Declaring metric variables
2023-03-14 12:48:16,960:INFO:Importing untrained model
2023-03-14 12:48:16,964:INFO:Ada Boost Classifier Imported successfully
2023-03-14 12:48:16,972:INFO:Starting cross validation
2023-03-14 12:48:16,974:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:17,445:INFO:Calculating mean and std
2023-03-14 12:48:17,446:INFO:Creating metrics dataframe
2023-03-14 12:48:17,448:INFO:Uploading results into container
2023-03-14 12:48:17,449:INFO:Uploading model into container now
2023-03-14 12:48:17,449:INFO:_master_model_container: 9
2023-03-14 12:48:17,449:INFO:_display_container: 2
2023-03-14 12:48:17,449:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=438)
2023-03-14 12:48:17,449:INFO:create_model() successfully completed......................................
2023-03-14 12:48:17,515:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:17,515:INFO:Creating metrics dataframe
2023-03-14 12:48:17,524:INFO:Initializing Gradient Boosting Classifier
2023-03-14 12:48:17,524:INFO:Total runtime is 0.13497403065363564 minutes
2023-03-14 12:48:17,528:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:17,528:INFO:Initializing create_model()
2023-03-14 12:48:17,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:17,528:INFO:Checking exceptions
2023-03-14 12:48:17,528:INFO:Importing libraries
2023-03-14 12:48:17,528:INFO:Copying training dataset
2023-03-14 12:48:17,532:INFO:Defining folds
2023-03-14 12:48:17,532:INFO:Declaring metric variables
2023-03-14 12:48:17,534:INFO:Importing untrained model
2023-03-14 12:48:17,538:INFO:Gradient Boosting Classifier Imported successfully
2023-03-14 12:48:17,543:INFO:Starting cross validation
2023-03-14 12:48:17,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:18,164:INFO:Calculating mean and std
2023-03-14 12:48:18,165:INFO:Creating metrics dataframe
2023-03-14 12:48:18,167:INFO:Uploading results into container
2023-03-14 12:48:18,168:INFO:Uploading model into container now
2023-03-14 12:48:18,168:INFO:_master_model_container: 10
2023-03-14 12:48:18,168:INFO:_display_container: 2
2023-03-14 12:48:18,168:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=438, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-14 12:48:18,168:INFO:create_model() successfully completed......................................
2023-03-14 12:48:18,236:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:18,236:INFO:Creating metrics dataframe
2023-03-14 12:48:18,251:INFO:Initializing Linear Discriminant Analysis
2023-03-14 12:48:18,251:INFO:Total runtime is 0.1470946192741394 minutes
2023-03-14 12:48:18,254:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:18,254:INFO:Initializing create_model()
2023-03-14 12:48:18,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:18,254:INFO:Checking exceptions
2023-03-14 12:48:18,254:INFO:Importing libraries
2023-03-14 12:48:18,254:INFO:Copying training dataset
2023-03-14 12:48:18,258:INFO:Defining folds
2023-03-14 12:48:18,258:INFO:Declaring metric variables
2023-03-14 12:48:18,260:INFO:Importing untrained model
2023-03-14 12:48:18,263:INFO:Linear Discriminant Analysis Imported successfully
2023-03-14 12:48:18,268:INFO:Starting cross validation
2023-03-14 12:48:18,269:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:18,724:INFO:Calculating mean and std
2023-03-14 12:48:18,726:INFO:Creating metrics dataframe
2023-03-14 12:48:18,728:INFO:Uploading results into container
2023-03-14 12:48:18,728:INFO:Uploading model into container now
2023-03-14 12:48:18,729:INFO:_master_model_container: 11
2023-03-14 12:48:18,729:INFO:_display_container: 2
2023-03-14 12:48:18,729:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-03-14 12:48:18,729:INFO:create_model() successfully completed......................................
2023-03-14 12:48:18,794:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:18,794:INFO:Creating metrics dataframe
2023-03-14 12:48:18,803:INFO:Initializing Extra Trees Classifier
2023-03-14 12:48:18,803:INFO:Total runtime is 0.15628684759140013 minutes
2023-03-14 12:48:18,805:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:18,806:INFO:Initializing create_model()
2023-03-14 12:48:18,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:18,806:INFO:Checking exceptions
2023-03-14 12:48:18,806:INFO:Importing libraries
2023-03-14 12:48:18,806:INFO:Copying training dataset
2023-03-14 12:48:18,809:INFO:Defining folds
2023-03-14 12:48:18,810:INFO:Declaring metric variables
2023-03-14 12:48:18,813:INFO:Importing untrained model
2023-03-14 12:48:18,816:INFO:Extra Trees Classifier Imported successfully
2023-03-14 12:48:18,822:INFO:Starting cross validation
2023-03-14 12:48:18,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:19,776:INFO:Calculating mean and std
2023-03-14 12:48:19,777:INFO:Creating metrics dataframe
2023-03-14 12:48:19,779:INFO:Uploading results into container
2023-03-14 12:48:19,780:INFO:Uploading model into container now
2023-03-14 12:48:19,780:INFO:_master_model_container: 12
2023-03-14 12:48:19,780:INFO:_display_container: 2
2023-03-14 12:48:19,780:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=438, verbose=0, warm_start=False)
2023-03-14 12:48:19,780:INFO:create_model() successfully completed......................................
2023-03-14 12:48:19,846:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:19,846:INFO:Creating metrics dataframe
2023-03-14 12:48:19,855:INFO:Initializing Light Gradient Boosting Machine
2023-03-14 12:48:19,855:INFO:Total runtime is 0.17382970253626503 minutes
2023-03-14 12:48:19,859:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:19,859:INFO:Initializing create_model()
2023-03-14 12:48:19,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:19,859:INFO:Checking exceptions
2023-03-14 12:48:19,859:INFO:Importing libraries
2023-03-14 12:48:19,859:INFO:Copying training dataset
2023-03-14 12:48:19,862:INFO:Defining folds
2023-03-14 12:48:19,863:INFO:Declaring metric variables
2023-03-14 12:48:19,865:INFO:Importing untrained model
2023-03-14 12:48:19,868:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-14 12:48:19,873:INFO:Starting cross validation
2023-03-14 12:48:19,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:20,363:INFO:Calculating mean and std
2023-03-14 12:48:20,364:INFO:Creating metrics dataframe
2023-03-14 12:48:20,366:INFO:Uploading results into container
2023-03-14 12:48:20,367:INFO:Uploading model into container now
2023-03-14 12:48:20,367:INFO:_master_model_container: 13
2023-03-14 12:48:20,367:INFO:_display_container: 2
2023-03-14 12:48:20,367:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=438, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-14 12:48:20,367:INFO:create_model() successfully completed......................................
2023-03-14 12:48:20,436:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:20,436:INFO:Creating metrics dataframe
2023-03-14 12:48:20,447:INFO:Initializing Dummy Classifier
2023-03-14 12:48:20,447:INFO:Total runtime is 0.1836894353230794 minutes
2023-03-14 12:48:20,451:INFO:SubProcess create_model() called ==================================
2023-03-14 12:48:20,452:INFO:Initializing create_model()
2023-03-14 12:48:20,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f6734aba980>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:20,452:INFO:Checking exceptions
2023-03-14 12:48:20,452:INFO:Importing libraries
2023-03-14 12:48:20,452:INFO:Copying training dataset
2023-03-14 12:48:20,457:INFO:Defining folds
2023-03-14 12:48:20,457:INFO:Declaring metric variables
2023-03-14 12:48:20,461:INFO:Importing untrained model
2023-03-14 12:48:20,464:INFO:Dummy Classifier Imported successfully
2023-03-14 12:48:20,471:INFO:Starting cross validation
2023-03-14 12:48:20,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:48:20,798:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,807:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,820:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,821:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,829:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,830:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,901:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,907:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,914:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,919:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 12:48:20,923:INFO:Calculating mean and std
2023-03-14 12:48:20,924:INFO:Creating metrics dataframe
2023-03-14 12:48:20,927:INFO:Uploading results into container
2023-03-14 12:48:20,928:INFO:Uploading model into container now
2023-03-14 12:48:20,928:INFO:_master_model_container: 14
2023-03-14 12:48:20,928:INFO:_display_container: 2
2023-03-14 12:48:20,928:INFO:DummyClassifier(constant=None, random_state=438, strategy='prior')
2023-03-14 12:48:20,928:INFO:create_model() successfully completed......................................
2023-03-14 12:48:20,994:INFO:SubProcess create_model() end ==================================
2023-03-14 12:48:20,994:INFO:Creating metrics dataframe
2023-03-14 12:48:21,010:INFO:Initializing create_model()
2023-03-14 12:48:21,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:48:21,010:INFO:Checking exceptions
2023-03-14 12:48:21,011:INFO:Importing libraries
2023-03-14 12:48:21,011:INFO:Copying training dataset
2023-03-14 12:48:21,015:INFO:Defining folds
2023-03-14 12:48:21,015:INFO:Declaring metric variables
2023-03-14 12:48:21,015:INFO:Importing untrained model
2023-03-14 12:48:21,015:INFO:Declaring custom model
2023-03-14 12:48:21,015:INFO:Logistic Regression Imported successfully
2023-03-14 12:48:21,016:INFO:Cross validation set to False
2023-03-14 12:48:21,016:INFO:Fitting Model
2023-03-14 12:48:21,205:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 12:48:21,205:INFO:create_model() successfully completed......................................
2023-03-14 12:48:21,306:INFO:_master_model_container: 14
2023-03-14 12:48:21,306:INFO:_display_container: 2
2023-03-14 12:48:21,306:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 12:48:21,306:INFO:compare_models() successfully completed......................................
2023-03-14 12:52:50,127:INFO:Initializing tune_model()
2023-03-14 12:52:50,127:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>)
2023-03-14 12:52:50,127:INFO:Checking exceptions
2023-03-14 12:52:50,157:INFO:Copying training dataset
2023-03-14 12:52:50,162:INFO:Checking base model
2023-03-14 12:52:50,162:INFO:Base model : Logistic Regression
2023-03-14 12:52:50,169:INFO:Declaring metric variables
2023-03-14 12:52:50,174:INFO:Defining Hyperparameters
2023-03-14 12:52:50,253:INFO:Tuning with n_jobs=-1
2023-03-14 12:52:50,254:INFO:Initializing RandomizedSearchCV
2023-03-14 12:52:53,657:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 9.809}
2023-03-14 12:52:53,658:INFO:Hyperparameter search completed
2023-03-14 12:52:53,658:INFO:SubProcess create_model() called ==================================
2023-03-14 12:52:53,659:INFO:Initializing create_model()
2023-03-14 12:52:53,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f67dfcb17b0>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 9.809})
2023-03-14 12:52:53,660:INFO:Checking exceptions
2023-03-14 12:52:53,660:INFO:Importing libraries
2023-03-14 12:52:53,660:INFO:Copying training dataset
2023-03-14 12:52:53,668:INFO:Defining folds
2023-03-14 12:52:53,668:INFO:Declaring metric variables
2023-03-14 12:52:53,673:INFO:Importing untrained model
2023-03-14 12:52:53,673:INFO:Declaring custom model
2023-03-14 12:52:53,680:INFO:Logistic Regression Imported successfully
2023-03-14 12:52:53,690:INFO:Starting cross validation
2023-03-14 12:52:53,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:52:54,177:INFO:Calculating mean and std
2023-03-14 12:52:54,179:INFO:Creating metrics dataframe
2023-03-14 12:52:54,189:INFO:Finalizing model
2023-03-14 12:52:54,378:INFO:Uploading results into container
2023-03-14 12:52:54,378:INFO:Uploading model into container now
2023-03-14 12:52:54,379:INFO:_master_model_container: 15
2023-03-14 12:52:54,379:INFO:_display_container: 3
2023-03-14 12:52:54,379:INFO:LogisticRegression(C=9.809, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 12:52:54,379:INFO:create_model() successfully completed......................................
2023-03-14 12:52:54,454:INFO:SubProcess create_model() end ==================================
2023-03-14 12:52:54,454:INFO:choose_better activated
2023-03-14 12:52:54,457:INFO:SubProcess create_model() called ==================================
2023-03-14 12:52:54,458:INFO:Initializing create_model()
2023-03-14 12:52:54,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 12:52:54,458:INFO:Checking exceptions
2023-03-14 12:52:54,459:INFO:Importing libraries
2023-03-14 12:52:54,460:INFO:Copying training dataset
2023-03-14 12:52:54,464:INFO:Defining folds
2023-03-14 12:52:54,464:INFO:Declaring metric variables
2023-03-14 12:52:54,464:INFO:Importing untrained model
2023-03-14 12:52:54,464:INFO:Declaring custom model
2023-03-14 12:52:54,465:INFO:Logistic Regression Imported successfully
2023-03-14 12:52:54,465:INFO:Starting cross validation
2023-03-14 12:52:54,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 12:52:54,958:INFO:Calculating mean and std
2023-03-14 12:52:54,959:INFO:Creating metrics dataframe
2023-03-14 12:52:54,960:INFO:Finalizing model
2023-03-14 12:52:55,095:INFO:Uploading results into container
2023-03-14 12:52:55,095:INFO:Uploading model into container now
2023-03-14 12:52:55,096:INFO:_master_model_container: 16
2023-03-14 12:52:55,096:INFO:_display_container: 4
2023-03-14 12:52:55,096:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 12:52:55,096:INFO:create_model() successfully completed......................................
2023-03-14 12:52:55,171:INFO:SubProcess create_model() end ==================================
2023-03-14 12:52:55,172:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-03-14 12:52:55,172:INFO:LogisticRegression(C=9.809, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-03-14 12:52:55,172:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-03-14 12:52:55,172:INFO:choose_better completed
2023-03-14 12:52:55,173:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-03-14 12:52:55,181:INFO:_master_model_container: 16
2023-03-14 12:52:55,181:INFO:_display_container: 3
2023-03-14 12:52:55,181:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 12:52:55,181:INFO:tune_model() successfully completed......................................
2023-03-14 12:53:50,472:INFO:Initializing finalize_model()
2023-03-14 12:53:50,472:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-03-14 12:53:50,473:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 12:53:50,478:INFO:Initializing create_model()
2023-03-14 12:53:50,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=438, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-03-14 12:53:50,478:INFO:Checking exceptions
2023-03-14 12:53:50,480:INFO:Importing libraries
2023-03-14 12:53:50,480:INFO:Copying training dataset
2023-03-14 12:53:50,481:INFO:Defining folds
2023-03-14 12:53:50,481:INFO:Declaring metric variables
2023-03-14 12:53:50,481:INFO:Importing untrained model
2023-03-14 12:53:50,481:INFO:Declaring custom model
2023-03-14 12:53:50,482:INFO:Logistic Regression Imported successfully
2023-03-14 12:53:50,484:INFO:Cross validation set to False
2023-03-14 12:53:50,484:INFO:Fitting Model
2023-03-14 12:53:50,685:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=438,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 12:53:50,685:INFO:create_model() successfully completed......................................
2023-03-14 12:53:50,760:INFO:_master_model_container: 16
2023-03-14 12:53:50,760:INFO:_display_container: 3
2023-03-14 12:53:50,772:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=438,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 12:53:50,772:INFO:finalize_model() successfully completed......................................
2023-03-14 13:03:38,601:INFO:Initializing save_model()
2023-03-14 13:03:38,601:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=438,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=../models/first_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-03-14 13:03:38,601:INFO:Adding model into prep_pipe
2023-03-14 13:03:38,603:WARNING:Only Model saved as it was a pipeline.
2023-03-14 13:03:38,617:INFO:../models/first_model.pkl saved in current working directory
2023-03-14 13:03:38,629:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=438,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 13:03:38,629:INFO:save_model() successfully completed......................................
2023-03-14 13:04:43,601:INFO:Initializing load_model()
2023-03-14 13:04:43,602:INFO:load_model(model_name=../models/first_model, platform=None, authentication=None, verbose=True)
2023-03-14 13:06:13,510:INFO:Initializing predict_model()
2023-03-14 13:06:13,510:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6734aba950>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=438,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f6733c04f70>)
2023-03-14 13:06:13,510:INFO:Checking exceptions
2023-03-14 13:06:13,510:INFO:Preloading libraries
2023-03-14 13:06:13,512:INFO:Set up data.
2023-03-14 13:06:13,527:INFO:Set up index.
2023-03-14 13:57:32,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 13:57:32,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 13:57:32,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 13:57:32,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 13:57:32,786:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-14 16:47:35,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 16:47:35,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 16:47:35,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 16:47:35,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-14 16:47:35,491:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-14 16:47:41,786:WARNING:/tmp/ipykernel_51788/2274191625.py:1: DeprecationWarning: `import pandas_profiling` is going to be deprecated by April 1st. Please use `import ydata_profiling` instead.
  from pandas_profiling import ProfileReport

2023-03-14 16:48:46,944:INFO:PyCaret ClassificationExperiment
2023-03-14 16:48:46,944:INFO:Logging name: titanic_1
2023-03-14 16:48:46,944:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-14 16:48:46,944:INFO:version 3.0.0.rc9
2023-03-14 16:48:46,944:INFO:Initializing setup()
2023-03-14 16:48:46,944:INFO:self.USI: 82e2
2023-03-14 16:48:46,945:INFO:self._variable_keys: {'fold_shuffle_param', 'pipeline', '_available_plots', 'X_test', 'USI', 'n_jobs_param', 'y_train', 'exp_id', 'seed', 'data', 'gpu_n_jobs_param', 'exp_name_log', 'fold_generator', 'logging_param', 'idx', 'target_param', 'y_test', 'memory', 'html_param', 'fold_groups_param', 'y', 'X_train', 'fix_imbalance', '_ml_usecase', 'is_multiclass', 'X', 'gpu_param', 'log_plots_param'}
2023-03-14 16:48:46,945:INFO:Checking environment
2023-03-14 16:48:46,945:INFO:python_version: 3.10.6
2023-03-14 16:48:46,945:INFO:python_build: ('main', 'Nov 14 2022 16:10:14')
2023-03-14 16:48:46,945:INFO:machine: x86_64
2023-03-14 16:48:46,945:INFO:platform: Linux-5.19.0-35-generic-x86_64-with-glibc2.35
2023-03-14 16:48:46,945:INFO:Memory: svmem(total=16160448512, available=7664627712, percent=52.6, used=7950340096, free=932847616, active=3395465216, inactive=9365463040, buffers=473214976, cached=6804045824, shared=206209024, slab=979349504)
2023-03-14 16:48:46,947:INFO:Physical Core: 8
2023-03-14 16:48:46,947:INFO:Logical Core: 16
2023-03-14 16:48:46,947:INFO:Checking libraries
2023-03-14 16:48:46,947:INFO:System:
2023-03-14 16:48:46,947:INFO:    python: 3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
2023-03-14 16:48:46,947:INFO:executable: /home/nalaminos/Entornos/mlops-titanic/bin/python3
2023-03-14 16:48:46,947:INFO:   machine: Linux-5.19.0-35-generic-x86_64-with-glibc2.35
2023-03-14 16:48:46,947:INFO:PyCaret required dependencies:
2023-03-14 16:48:46,947:INFO:                 pip: 22.0.2
2023-03-14 16:48:46,948:INFO:          setuptools: 59.6.0
2023-03-14 16:48:46,948:INFO:             pycaret: 3.0.0rc9
2023-03-14 16:48:46,948:INFO:             IPython: 8.11.0
2023-03-14 16:48:46,948:INFO:          ipywidgets: 8.0.4
2023-03-14 16:48:46,948:INFO:                tqdm: 4.64.1
2023-03-14 16:48:46,948:INFO:               numpy: 1.23.5
2023-03-14 16:48:46,948:INFO:              pandas: 1.5.3
2023-03-14 16:48:46,948:INFO:              jinja2: 3.1.2
2023-03-14 16:48:46,948:INFO:               scipy: 1.9.3
2023-03-14 16:48:46,948:INFO:              joblib: 1.2.0
2023-03-14 16:48:46,948:INFO:             sklearn: 1.2.2
2023-03-14 16:48:46,948:INFO:                pyod: 1.0.8
2023-03-14 16:48:46,948:INFO:            imblearn: 0.10.1
2023-03-14 16:48:46,948:INFO:   category_encoders: 2.6.0
2023-03-14 16:48:46,948:INFO:            lightgbm: 3.3.5
2023-03-14 16:48:46,948:INFO:               numba: 0.56.4
2023-03-14 16:48:46,948:INFO:            requests: 2.28.2
2023-03-14 16:48:46,948:INFO:          matplotlib: 3.6.3
2023-03-14 16:48:46,948:INFO:          scikitplot: 0.3.7
2023-03-14 16:48:46,948:INFO:         yellowbrick: 1.5
2023-03-14 16:48:46,948:INFO:              plotly: 5.13.1
2023-03-14 16:48:46,949:INFO:             kaleido: 0.2.1
2023-03-14 16:48:46,949:INFO:         statsmodels: 0.13.5
2023-03-14 16:48:46,949:INFO:              sktime: 0.16.1
2023-03-14 16:48:46,949:INFO:               tbats: 1.1.2
2023-03-14 16:48:46,949:INFO:            pmdarima: 2.0.2
2023-03-14 16:48:46,949:INFO:              psutil: 5.9.4
2023-03-14 16:48:46,949:INFO:PyCaret optional dependencies:
2023-03-14 16:48:46,952:INFO:                shap: 0.41.0
2023-03-14 16:48:46,953:INFO:           interpret: Not installed
2023-03-14 16:48:46,953:INFO:                umap: Not installed
2023-03-14 16:48:46,953:INFO:    pandas_profiling: 4.1.0
2023-03-14 16:48:46,953:INFO:  explainerdashboard: Not installed
2023-03-14 16:48:46,953:INFO:             autoviz: Not installed
2023-03-14 16:48:46,953:INFO:           fairlearn: Not installed
2023-03-14 16:48:46,953:INFO:             xgboost: Not installed
2023-03-14 16:48:46,953:INFO:            catboost: Not installed
2023-03-14 16:48:46,953:INFO:              kmodes: Not installed
2023-03-14 16:48:46,953:INFO:             mlxtend: Not installed
2023-03-14 16:48:46,953:INFO:       statsforecast: Not installed
2023-03-14 16:48:46,953:INFO:        tune_sklearn: Not installed
2023-03-14 16:48:46,953:INFO:                 ray: Not installed
2023-03-14 16:48:46,953:INFO:            hyperopt: Not installed
2023-03-14 16:48:46,953:INFO:              optuna: Not installed
2023-03-14 16:48:46,953:INFO:               skopt: Not installed
2023-03-14 16:48:46,953:INFO:              mlflow: 2.2.2
2023-03-14 16:48:46,953:INFO:              gradio: Not installed
2023-03-14 16:48:46,953:INFO:             fastapi: Not installed
2023-03-14 16:48:46,953:INFO:             uvicorn: Not installed
2023-03-14 16:48:46,953:INFO:              m2cgen: Not installed
2023-03-14 16:48:46,953:INFO:           evidently: Not installed
2023-03-14 16:48:46,954:INFO:               fugue: Not installed
2023-03-14 16:48:46,954:INFO:           streamlit: Not installed
2023-03-14 16:48:46,954:INFO:             prophet: Not installed
2023-03-14 16:48:46,954:INFO:None
2023-03-14 16:48:46,954:INFO:Set up data.
2023-03-14 16:48:46,972:INFO:Set up train/test split.
2023-03-14 16:48:46,981:INFO:Set up index.
2023-03-14 16:48:46,982:INFO:Set up folding strategy.
2023-03-14 16:48:46,982:INFO:Assigning column types.
2023-03-14 16:48:46,987:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-14 16:48:47,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-14 16:48:47,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 16:48:47,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-14 16:48:47,182:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 16:48:47,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,222:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-14 16:48:47,285:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 16:48:47,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,388:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 16:48:47,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,427:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-14 16:48:47,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:47,634:INFO:Preparing preprocessing pipeline...
2023-03-14 16:48:47,636:INFO:Set up label encoding.
2023-03-14 16:48:47,636:INFO:Set up simple imputation.
2023-03-14 16:48:47,639:INFO:Set up encoding of ordinal features.
2023-03-14 16:48:47,640:INFO:Set up encoding of categorical features.
2023-03-14 16:48:47,640:INFO:Set up removing multicollinearity.
2023-03-14 16:48:47,641:INFO:Set up column transformation.
2023-03-14 16:48:47,641:INFO:Set up feature normalization.
2023-03-14 16:48:47,872:INFO:Finished creating preprocessing pipeline.
2023-03-14 16:48:47,893:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-03-14 16:48:47,893:INFO:Creating final display dataframe.
2023-03-14 16:48:48,593:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            alive
2                   Target type           Binary
3                Target mapping    no: 0, yes: 1
4           Original data shape        (802, 15)
5        Transformed data shape        (802, 25)
6   Transformed train set shape        (561, 25)
7    Transformed test set shape        (241, 25)
8              Ordinal features                1
9              Numeric features                6
10         Categorical features                6
11     Rows with missing values            79.8%
12                   Preprocess             True
13              Imputation type           simple
14           Numeric imputation             mean
15       Categorical imputation             mode
16     Maximum one-hot encoding               25
17              Encoding method             None
18     Remove multicollinearity             True
19  Multicollinearity threshold             0.95
20               Transformation             True
21        Transformation method      yeo-johnson
22                    Normalize             True
23             Normalize method           zscore
24               Fold Generator  StratifiedKFold
25                  Fold Number               10
26                     CPU Jobs               -1
27                      Use GPU            False
28               Log Experiment     MlflowLogger
29              Experiment Name        titanic_1
30                          USI             82e2
2023-03-14 16:48:48,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:48,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:48,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:48,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 16:48:48,807:INFO:Logging experiment in loggers
2023-03-14 16:48:48,871:INFO:SubProcess save_model() called ==================================
2023-03-14 16:48:48,912:INFO:Initializing save_model()
2023-03-14 16:48:48,912:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), model_name=/tmp/tmpw3hjfin6/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-03-14 16:48:48,912:INFO:Adding model into prep_pipe
2023-03-14 16:48:48,913:WARNING:Only Model saved as it was a pipeline.
2023-03-14 16:48:48,923:INFO:/tmp/tmpw3hjfin6/Transformation Pipeline.pkl saved in current working directory
2023-03-14 16:48:48,943:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['survived', 'pclass', 'age',
                                             'sibsp', 'parch', 'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_em...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-03-14 16:48:48,943:INFO:save_model() successfully completed......................................
2023-03-14 16:48:49,167:INFO:SubProcess save_model() end ==================================
2023-03-14 16:48:49,170:INFO:setup() successfully completed in 1.87s...............
2023-03-14 16:52:20,615:INFO:Initializing compare_models()
2023-03-14 16:52:20,616:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, 'include': None, 'exclude': ['svm'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['svm'])
2023-03-14 16:52:20,617:INFO:Checking exceptions
2023-03-14 16:52:20,624:INFO:Preparing display monitor
2023-03-14 16:52:20,657:INFO:Initializing Logistic Regression
2023-03-14 16:52:20,657:INFO:Total runtime is 5.392233530680339e-06 minutes
2023-03-14 16:52:20,662:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:20,662:INFO:Initializing create_model()
2023-03-14 16:52:20,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:20,662:INFO:Checking exceptions
2023-03-14 16:52:20,663:INFO:Importing libraries
2023-03-14 16:52:20,663:INFO:Copying training dataset
2023-03-14 16:52:20,669:INFO:Defining folds
2023-03-14 16:52:20,669:INFO:Declaring metric variables
2023-03-14 16:52:20,673:INFO:Importing untrained model
2023-03-14 16:52:20,678:INFO:Logistic Regression Imported successfully
2023-03-14 16:52:20,686:INFO:Starting cross validation
2023-03-14 16:52:20,688:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:23,941:INFO:Calculating mean and std
2023-03-14 16:52:23,943:INFO:Creating metrics dataframe
2023-03-14 16:52:23,950:INFO:Uploading results into container
2023-03-14 16:52:23,951:INFO:Uploading model into container now
2023-03-14 16:52:23,952:INFO:_master_model_container: 1
2023-03-14 16:52:23,952:INFO:_display_container: 2
2023-03-14 16:52:23,952:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 16:52:23,953:INFO:create_model() successfully completed......................................
2023-03-14 16:52:24,104:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:24,104:INFO:Creating metrics dataframe
2023-03-14 16:52:24,115:INFO:Initializing K Neighbors Classifier
2023-03-14 16:52:24,116:INFO:Total runtime is 0.05764734745025635 minutes
2023-03-14 16:52:24,119:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:24,120:INFO:Initializing create_model()
2023-03-14 16:52:24,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:24,120:INFO:Checking exceptions
2023-03-14 16:52:24,120:INFO:Importing libraries
2023-03-14 16:52:24,120:INFO:Copying training dataset
2023-03-14 16:52:24,126:INFO:Defining folds
2023-03-14 16:52:24,126:INFO:Declaring metric variables
2023-03-14 16:52:24,131:INFO:Importing untrained model
2023-03-14 16:52:24,136:INFO:K Neighbors Classifier Imported successfully
2023-03-14 16:52:24,142:INFO:Starting cross validation
2023-03-14 16:52:24,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:26,531:INFO:Calculating mean and std
2023-03-14 16:52:26,533:INFO:Creating metrics dataframe
2023-03-14 16:52:26,537:INFO:Uploading results into container
2023-03-14 16:52:26,538:INFO:Uploading model into container now
2023-03-14 16:52:26,538:INFO:_master_model_container: 2
2023-03-14 16:52:26,538:INFO:_display_container: 2
2023-03-14 16:52:26,539:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-03-14 16:52:26,539:INFO:create_model() successfully completed......................................
2023-03-14 16:52:26,665:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:26,665:INFO:Creating metrics dataframe
2023-03-14 16:52:26,677:INFO:Initializing Naive Bayes
2023-03-14 16:52:26,677:INFO:Total runtime is 0.10033781925837199 minutes
2023-03-14 16:52:26,681:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:26,681:INFO:Initializing create_model()
2023-03-14 16:52:26,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:26,681:INFO:Checking exceptions
2023-03-14 16:52:26,681:INFO:Importing libraries
2023-03-14 16:52:26,681:INFO:Copying training dataset
2023-03-14 16:52:26,689:INFO:Defining folds
2023-03-14 16:52:26,689:INFO:Declaring metric variables
2023-03-14 16:52:26,693:INFO:Importing untrained model
2023-03-14 16:52:26,698:INFO:Naive Bayes Imported successfully
2023-03-14 16:52:26,706:INFO:Starting cross validation
2023-03-14 16:52:26,708:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:27,527:INFO:Calculating mean and std
2023-03-14 16:52:27,528:INFO:Creating metrics dataframe
2023-03-14 16:52:27,533:INFO:Uploading results into container
2023-03-14 16:52:27,533:INFO:Uploading model into container now
2023-03-14 16:52:27,534:INFO:_master_model_container: 3
2023-03-14 16:52:27,534:INFO:_display_container: 2
2023-03-14 16:52:27,534:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-03-14 16:52:27,534:INFO:create_model() successfully completed......................................
2023-03-14 16:52:27,661:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:27,662:INFO:Creating metrics dataframe
2023-03-14 16:52:27,674:INFO:Initializing Decision Tree Classifier
2023-03-14 16:52:27,674:INFO:Total runtime is 0.11695116758346558 minutes
2023-03-14 16:52:27,677:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:27,678:INFO:Initializing create_model()
2023-03-14 16:52:27,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:27,678:INFO:Checking exceptions
2023-03-14 16:52:27,678:INFO:Importing libraries
2023-03-14 16:52:27,678:INFO:Copying training dataset
2023-03-14 16:52:27,685:INFO:Defining folds
2023-03-14 16:52:27,685:INFO:Declaring metric variables
2023-03-14 16:52:27,690:INFO:Importing untrained model
2023-03-14 16:52:27,695:INFO:Decision Tree Classifier Imported successfully
2023-03-14 16:52:27,704:INFO:Starting cross validation
2023-03-14 16:52:27,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:28,410:INFO:Calculating mean and std
2023-03-14 16:52:28,411:INFO:Creating metrics dataframe
2023-03-14 16:52:28,414:INFO:Uploading results into container
2023-03-14 16:52:28,415:INFO:Uploading model into container now
2023-03-14 16:52:28,415:INFO:_master_model_container: 4
2023-03-14 16:52:28,415:INFO:_display_container: 2
2023-03-14 16:52:28,415:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 16:52:28,415:INFO:create_model() successfully completed......................................
2023-03-14 16:52:28,527:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:28,527:INFO:Creating metrics dataframe
2023-03-14 16:52:28,535:INFO:Initializing Ridge Classifier
2023-03-14 16:52:28,536:INFO:Total runtime is 0.13131384054819742 minutes
2023-03-14 16:52:28,538:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:28,539:INFO:Initializing create_model()
2023-03-14 16:52:28,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:28,539:INFO:Checking exceptions
2023-03-14 16:52:28,539:INFO:Importing libraries
2023-03-14 16:52:28,539:INFO:Copying training dataset
2023-03-14 16:52:28,544:INFO:Defining folds
2023-03-14 16:52:28,544:INFO:Declaring metric variables
2023-03-14 16:52:28,547:INFO:Importing untrained model
2023-03-14 16:52:28,550:INFO:Ridge Classifier Imported successfully
2023-03-14 16:52:28,557:INFO:Starting cross validation
2023-03-14 16:52:28,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:29,048:INFO:Calculating mean and std
2023-03-14 16:52:29,049:INFO:Creating metrics dataframe
2023-03-14 16:52:29,055:INFO:Uploading results into container
2023-03-14 16:52:29,056:INFO:Uploading model into container now
2023-03-14 16:52:29,057:INFO:_master_model_container: 5
2023-03-14 16:52:29,057:INFO:_display_container: 2
2023-03-14 16:52:29,057:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-03-14 16:52:29,057:INFO:create_model() successfully completed......................................
2023-03-14 16:52:29,180:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:29,180:INFO:Creating metrics dataframe
2023-03-14 16:52:29,188:INFO:Initializing Random Forest Classifier
2023-03-14 16:52:29,188:INFO:Total runtime is 0.14219327370325724 minutes
2023-03-14 16:52:29,191:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:29,191:INFO:Initializing create_model()
2023-03-14 16:52:29,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:29,191:INFO:Checking exceptions
2023-03-14 16:52:29,191:INFO:Importing libraries
2023-03-14 16:52:29,191:INFO:Copying training dataset
2023-03-14 16:52:29,196:INFO:Defining folds
2023-03-14 16:52:29,196:INFO:Declaring metric variables
2023-03-14 16:52:29,198:INFO:Importing untrained model
2023-03-14 16:52:29,202:INFO:Random Forest Classifier Imported successfully
2023-03-14 16:52:29,208:INFO:Starting cross validation
2023-03-14 16:52:29,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:30,446:INFO:Calculating mean and std
2023-03-14 16:52:30,447:INFO:Creating metrics dataframe
2023-03-14 16:52:30,450:INFO:Uploading results into container
2023-03-14 16:52:30,451:INFO:Uploading model into container now
2023-03-14 16:52:30,451:INFO:_master_model_container: 6
2023-03-14 16:52:30,452:INFO:_display_container: 2
2023-03-14 16:52:30,452:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-03-14 16:52:30,452:INFO:create_model() successfully completed......................................
2023-03-14 16:52:30,565:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:30,565:INFO:Creating metrics dataframe
2023-03-14 16:52:30,574:INFO:Initializing Quadratic Discriminant Analysis
2023-03-14 16:52:30,574:INFO:Total runtime is 0.16528756618499757 minutes
2023-03-14 16:52:30,577:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:30,577:INFO:Initializing create_model()
2023-03-14 16:52:30,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:30,577:INFO:Checking exceptions
2023-03-14 16:52:30,577:INFO:Importing libraries
2023-03-14 16:52:30,577:INFO:Copying training dataset
2023-03-14 16:52:30,584:INFO:Defining folds
2023-03-14 16:52:30,585:INFO:Declaring metric variables
2023-03-14 16:52:30,589:INFO:Importing untrained model
2023-03-14 16:52:30,591:INFO:Quadratic Discriminant Analysis Imported successfully
2023-03-14 16:52:30,597:INFO:Starting cross validation
2023-03-14 16:52:30,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:30,869:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,876:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,893:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,911:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,938:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,973:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,982:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,984:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:30,995:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:31,004:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 16:52:31,235:INFO:Calculating mean and std
2023-03-14 16:52:31,237:INFO:Creating metrics dataframe
2023-03-14 16:52:31,239:INFO:Uploading results into container
2023-03-14 16:52:31,240:INFO:Uploading model into container now
2023-03-14 16:52:31,240:INFO:_master_model_container: 7
2023-03-14 16:52:31,240:INFO:_display_container: 2
2023-03-14 16:52:31,241:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-03-14 16:52:31,241:INFO:create_model() successfully completed......................................
2023-03-14 16:52:31,351:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:31,352:INFO:Creating metrics dataframe
2023-03-14 16:52:31,360:INFO:Initializing Ada Boost Classifier
2023-03-14 16:52:31,360:INFO:Total runtime is 0.17839634021123252 minutes
2023-03-14 16:52:31,363:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:31,363:INFO:Initializing create_model()
2023-03-14 16:52:31,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:31,364:INFO:Checking exceptions
2023-03-14 16:52:31,364:INFO:Importing libraries
2023-03-14 16:52:31,364:INFO:Copying training dataset
2023-03-14 16:52:31,368:INFO:Defining folds
2023-03-14 16:52:31,368:INFO:Declaring metric variables
2023-03-14 16:52:31,370:INFO:Importing untrained model
2023-03-14 16:52:31,373:INFO:Ada Boost Classifier Imported successfully
2023-03-14 16:52:31,378:INFO:Starting cross validation
2023-03-14 16:52:31,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:32,030:INFO:Calculating mean and std
2023-03-14 16:52:32,032:INFO:Creating metrics dataframe
2023-03-14 16:52:32,037:INFO:Uploading results into container
2023-03-14 16:52:32,038:INFO:Uploading model into container now
2023-03-14 16:52:32,039:INFO:_master_model_container: 8
2023-03-14 16:52:32,039:INFO:_display_container: 2
2023-03-14 16:52:32,039:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-03-14 16:52:32,039:INFO:create_model() successfully completed......................................
2023-03-14 16:52:32,166:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:32,166:INFO:Creating metrics dataframe
2023-03-14 16:52:32,175:INFO:Initializing Gradient Boosting Classifier
2023-03-14 16:52:32,175:INFO:Total runtime is 0.1919671932856242 minutes
2023-03-14 16:52:32,177:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:32,177:INFO:Initializing create_model()
2023-03-14 16:52:32,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:32,177:INFO:Checking exceptions
2023-03-14 16:52:32,177:INFO:Importing libraries
2023-03-14 16:52:32,177:INFO:Copying training dataset
2023-03-14 16:52:32,181:INFO:Defining folds
2023-03-14 16:52:32,181:INFO:Declaring metric variables
2023-03-14 16:52:32,184:INFO:Importing untrained model
2023-03-14 16:52:32,187:INFO:Gradient Boosting Classifier Imported successfully
2023-03-14 16:52:32,192:INFO:Starting cross validation
2023-03-14 16:52:32,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:33,010:INFO:Calculating mean and std
2023-03-14 16:52:33,011:INFO:Creating metrics dataframe
2023-03-14 16:52:33,013:INFO:Uploading results into container
2023-03-14 16:52:33,014:INFO:Uploading model into container now
2023-03-14 16:52:33,014:INFO:_master_model_container: 9
2023-03-14 16:52:33,014:INFO:_display_container: 2
2023-03-14 16:52:33,014:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-14 16:52:33,014:INFO:create_model() successfully completed......................................
2023-03-14 16:52:33,125:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:33,125:INFO:Creating metrics dataframe
2023-03-14 16:52:33,133:INFO:Initializing Linear Discriminant Analysis
2023-03-14 16:52:33,133:INFO:Total runtime is 0.20794330040613812 minutes
2023-03-14 16:52:33,136:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:33,136:INFO:Initializing create_model()
2023-03-14 16:52:33,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:33,136:INFO:Checking exceptions
2023-03-14 16:52:33,136:INFO:Importing libraries
2023-03-14 16:52:33,136:INFO:Copying training dataset
2023-03-14 16:52:33,140:INFO:Defining folds
2023-03-14 16:52:33,140:INFO:Declaring metric variables
2023-03-14 16:52:33,143:INFO:Importing untrained model
2023-03-14 16:52:33,146:INFO:Linear Discriminant Analysis Imported successfully
2023-03-14 16:52:33,151:INFO:Starting cross validation
2023-03-14 16:52:33,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:33,758:INFO:Calculating mean and std
2023-03-14 16:52:33,760:INFO:Creating metrics dataframe
2023-03-14 16:52:33,765:INFO:Uploading results into container
2023-03-14 16:52:33,766:INFO:Uploading model into container now
2023-03-14 16:52:33,766:INFO:_master_model_container: 10
2023-03-14 16:52:33,766:INFO:_display_container: 2
2023-03-14 16:52:33,767:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-03-14 16:52:33,767:INFO:create_model() successfully completed......................................
2023-03-14 16:52:33,897:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:33,897:INFO:Creating metrics dataframe
2023-03-14 16:52:33,906:INFO:Initializing Extra Trees Classifier
2023-03-14 16:52:33,906:INFO:Total runtime is 0.220818305015564 minutes
2023-03-14 16:52:33,908:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:33,908:INFO:Initializing create_model()
2023-03-14 16:52:33,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:33,909:INFO:Checking exceptions
2023-03-14 16:52:33,909:INFO:Importing libraries
2023-03-14 16:52:33,909:INFO:Copying training dataset
2023-03-14 16:52:33,913:INFO:Defining folds
2023-03-14 16:52:33,913:INFO:Declaring metric variables
2023-03-14 16:52:33,916:INFO:Importing untrained model
2023-03-14 16:52:33,919:INFO:Extra Trees Classifier Imported successfully
2023-03-14 16:52:33,924:INFO:Starting cross validation
2023-03-14 16:52:33,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:35,127:INFO:Calculating mean and std
2023-03-14 16:52:35,127:INFO:Creating metrics dataframe
2023-03-14 16:52:35,130:INFO:Uploading results into container
2023-03-14 16:52:35,130:INFO:Uploading model into container now
2023-03-14 16:52:35,131:INFO:_master_model_container: 11
2023-03-14 16:52:35,131:INFO:_display_container: 2
2023-03-14 16:52:35,131:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-03-14 16:52:35,131:INFO:create_model() successfully completed......................................
2023-03-14 16:52:35,241:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:35,241:INFO:Creating metrics dataframe
2023-03-14 16:52:35,251:INFO:Initializing Light Gradient Boosting Machine
2023-03-14 16:52:35,251:INFO:Total runtime is 0.24323910077412925 minutes
2023-03-14 16:52:35,253:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:35,254:INFO:Initializing create_model()
2023-03-14 16:52:35,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:35,254:INFO:Checking exceptions
2023-03-14 16:52:35,254:INFO:Importing libraries
2023-03-14 16:52:35,254:INFO:Copying training dataset
2023-03-14 16:52:35,258:INFO:Defining folds
2023-03-14 16:52:35,259:INFO:Declaring metric variables
2023-03-14 16:52:35,261:INFO:Importing untrained model
2023-03-14 16:52:35,264:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-14 16:52:35,269:INFO:Starting cross validation
2023-03-14 16:52:35,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:35,890:INFO:Calculating mean and std
2023-03-14 16:52:35,892:INFO:Creating metrics dataframe
2023-03-14 16:52:35,894:INFO:Uploading results into container
2023-03-14 16:52:35,895:INFO:Uploading model into container now
2023-03-14 16:52:35,895:INFO:_master_model_container: 12
2023-03-14 16:52:35,895:INFO:_display_container: 2
2023-03-14 16:52:35,895:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-14 16:52:35,895:INFO:create_model() successfully completed......................................
2023-03-14 16:52:36,023:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:36,023:INFO:Creating metrics dataframe
2023-03-14 16:52:36,033:INFO:Initializing Dummy Classifier
2023-03-14 16:52:36,033:INFO:Total runtime is 0.25627785523732505 minutes
2023-03-14 16:52:36,036:INFO:SubProcess create_model() called ==================================
2023-03-14 16:52:36,036:INFO:Initializing create_model()
2023-03-14 16:52:36,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4707baf160>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:36,036:INFO:Checking exceptions
2023-03-14 16:52:36,036:INFO:Importing libraries
2023-03-14 16:52:36,036:INFO:Copying training dataset
2023-03-14 16:52:36,040:INFO:Defining folds
2023-03-14 16:52:36,041:INFO:Declaring metric variables
2023-03-14 16:52:36,044:INFO:Importing untrained model
2023-03-14 16:52:36,047:INFO:Dummy Classifier Imported successfully
2023-03-14 16:52:36,052:INFO:Starting cross validation
2023-03-14 16:52:36,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:52:36,523:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,526:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,538:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,552:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,552:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,560:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,610:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,624:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,636:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,639:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 16:52:36,643:INFO:Calculating mean and std
2023-03-14 16:52:36,644:INFO:Creating metrics dataframe
2023-03-14 16:52:36,647:INFO:Uploading results into container
2023-03-14 16:52:36,647:INFO:Uploading model into container now
2023-03-14 16:52:36,647:INFO:_master_model_container: 13
2023-03-14 16:52:36,647:INFO:_display_container: 2
2023-03-14 16:52:36,647:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-03-14 16:52:36,647:INFO:create_model() successfully completed......................................
2023-03-14 16:52:36,752:INFO:SubProcess create_model() end ==================================
2023-03-14 16:52:36,753:INFO:Creating metrics dataframe
2023-03-14 16:52:36,769:INFO:Initializing create_model()
2023-03-14 16:52:36,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:52:36,769:INFO:Checking exceptions
2023-03-14 16:52:36,771:INFO:Importing libraries
2023-03-14 16:52:36,771:INFO:Copying training dataset
2023-03-14 16:52:36,774:INFO:Defining folds
2023-03-14 16:52:36,775:INFO:Declaring metric variables
2023-03-14 16:52:36,775:INFO:Importing untrained model
2023-03-14 16:52:36,775:INFO:Declaring custom model
2023-03-14 16:52:36,775:INFO:Logistic Regression Imported successfully
2023-03-14 16:52:36,776:INFO:Cross validation set to False
2023-03-14 16:52:36,776:INFO:Fitting Model
2023-03-14 16:52:36,937:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 16:52:36,937:INFO:create_model() successfully completed......................................
2023-03-14 16:52:37,068:INFO:Creating Dashboard logs
2023-03-14 16:52:37,071:INFO:Model: Logistic Regression
2023-03-14 16:52:37,079:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-03-14 16:52:37,088:INFO:Initializing predict_model()
2023-03-14 16:52:37,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e6e7e050>)
2023-03-14 16:52:37,088:INFO:Checking exceptions
2023-03-14 16:52:37,088:INFO:Preloading libraries
2023-03-14 16:52:37,424:INFO:Creating Dashboard logs
2023-03-14 16:52:37,427:INFO:Model: Decision Tree Classifier
2023-03-14 16:52:37,433:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-03-14 16:52:37,556:INFO:Creating Dashboard logs
2023-03-14 16:52:37,559:INFO:Model: Ridge Classifier
2023-03-14 16:52:37,565:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2023-03-14 16:52:37,687:INFO:Creating Dashboard logs
2023-03-14 16:52:37,690:INFO:Model: Random Forest Classifier
2023-03-14 16:52:37,697:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-03-14 16:52:37,824:INFO:Creating Dashboard logs
2023-03-14 16:52:37,827:INFO:Model: str
2023-03-14 16:52:37,834:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-03-14 16:52:37,965:INFO:Creating Dashboard logs
2023-03-14 16:52:37,968:INFO:Model: Gradient Boosting Classifier
2023-03-14 16:52:37,975:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-03-14 16:52:38,107:INFO:Creating Dashboard logs
2023-03-14 16:52:38,110:INFO:Model: Linear Discriminant Analysis
2023-03-14 16:52:38,117:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2023-03-14 16:52:38,254:INFO:Creating Dashboard logs
2023-03-14 16:52:38,257:INFO:Model: Extra Trees Classifier
2023-03-14 16:52:38,264:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-03-14 16:52:38,401:INFO:Creating Dashboard logs
2023-03-14 16:52:38,404:INFO:Model: Light Gradient Boosting Machine
2023-03-14 16:52:38,412:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2023-03-14 16:52:38,546:INFO:Creating Dashboard logs
2023-03-14 16:52:38,549:INFO:Model: Naive Bayes
2023-03-14 16:52:38,555:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2023-03-14 16:52:38,680:INFO:Creating Dashboard logs
2023-03-14 16:52:38,683:INFO:Model: Quadratic Discriminant Analysis
2023-03-14 16:52:38,690:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2023-03-14 16:52:38,814:INFO:Creating Dashboard logs
2023-03-14 16:52:38,817:INFO:Model: K Neighbors Classifier
2023-03-14 16:52:38,824:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2023-03-14 16:52:38,949:INFO:Creating Dashboard logs
2023-03-14 16:52:38,952:INFO:Model: Dummy Classifier
2023-03-14 16:52:38,960:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2023-03-14 16:52:39,097:INFO:_master_model_container: 13
2023-03-14 16:52:39,097:INFO:_display_container: 2
2023-03-14 16:52:39,097:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 16:52:39,097:INFO:compare_models() successfully completed......................................
2023-03-14 16:54:01,336:INFO:Initializing tune_model()
2023-03-14 16:54:01,336:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>)
2023-03-14 16:54:01,337:INFO:Checking exceptions
2023-03-14 16:54:01,377:INFO:Copying training dataset
2023-03-14 16:54:01,385:INFO:Checking base model
2023-03-14 16:54:01,385:INFO:Base model : Logistic Regression
2023-03-14 16:54:01,391:INFO:Declaring metric variables
2023-03-14 16:54:01,398:INFO:Defining Hyperparameters
2023-03-14 16:54:01,544:INFO:Tuning with n_jobs=-1
2023-03-14 16:54:01,544:INFO:Initializing RandomizedSearchCV
2023-03-14 16:54:06,908:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.049}
2023-03-14 16:54:06,908:INFO:Hyperparameter search completed
2023-03-14 16:54:06,909:INFO:SubProcess create_model() called ==================================
2023-03-14 16:54:06,909:INFO:Initializing create_model()
2023-03-14 16:54:06,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4789f34160>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 0.049})
2023-03-14 16:54:06,909:INFO:Checking exceptions
2023-03-14 16:54:06,909:INFO:Importing libraries
2023-03-14 16:54:06,909:INFO:Copying training dataset
2023-03-14 16:54:06,916:INFO:Defining folds
2023-03-14 16:54:06,916:INFO:Declaring metric variables
2023-03-14 16:54:06,920:INFO:Importing untrained model
2023-03-14 16:54:06,920:INFO:Declaring custom model
2023-03-14 16:54:06,925:INFO:Logistic Regression Imported successfully
2023-03-14 16:54:06,934:INFO:Starting cross validation
2023-03-14 16:54:06,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:54:07,628:INFO:Calculating mean and std
2023-03-14 16:54:07,630:INFO:Creating metrics dataframe
2023-03-14 16:54:07,636:INFO:Finalizing model
2023-03-14 16:54:07,923:INFO:Uploading results into container
2023-03-14 16:54:07,924:INFO:Uploading model into container now
2023-03-14 16:54:07,924:INFO:_master_model_container: 14
2023-03-14 16:54:07,924:INFO:_display_container: 3
2023-03-14 16:54:07,925:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 16:54:07,925:INFO:create_model() successfully completed......................................
2023-03-14 16:54:08,072:INFO:SubProcess create_model() end ==================================
2023-03-14 16:54:08,072:INFO:choose_better activated
2023-03-14 16:54:08,076:INFO:SubProcess create_model() called ==================================
2023-03-14 16:54:08,077:INFO:Initializing create_model()
2023-03-14 16:54:08,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:54:08,077:INFO:Checking exceptions
2023-03-14 16:54:08,079:INFO:Importing libraries
2023-03-14 16:54:08,079:INFO:Copying training dataset
2023-03-14 16:54:08,084:INFO:Defining folds
2023-03-14 16:54:08,084:INFO:Declaring metric variables
2023-03-14 16:54:08,084:INFO:Importing untrained model
2023-03-14 16:54:08,084:INFO:Declaring custom model
2023-03-14 16:54:08,085:INFO:Logistic Regression Imported successfully
2023-03-14 16:54:08,085:INFO:Starting cross validation
2023-03-14 16:54:08,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:54:08,720:INFO:Calculating mean and std
2023-03-14 16:54:08,720:INFO:Creating metrics dataframe
2023-03-14 16:54:08,723:INFO:Finalizing model
2023-03-14 16:54:08,912:INFO:Uploading results into container
2023-03-14 16:54:08,913:INFO:Uploading model into container now
2023-03-14 16:54:08,913:INFO:_master_model_container: 15
2023-03-14 16:54:08,913:INFO:_display_container: 4
2023-03-14 16:54:08,913:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 16:54:08,913:INFO:create_model() successfully completed......................................
2023-03-14 16:54:09,045:INFO:SubProcess create_model() end ==================================
2023-03-14 16:54:09,046:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-03-14 16:54:09,046:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-03-14 16:54:09,046:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-03-14 16:54:09,047:INFO:choose_better completed
2023-03-14 16:54:09,047:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-03-14 16:54:09,047:INFO:Creating Dashboard logs
2023-03-14 16:54:09,051:INFO:Model: Logistic Regression
2023-03-14 16:54:09,059:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-03-14 16:54:09,071:INFO:Initializing predict_model()
2023-03-14 16:54:09,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f4704ef2680>)
2023-03-14 16:54:09,072:INFO:Checking exceptions
2023-03-14 16:54:09,072:INFO:Preloading libraries
2023-03-14 16:54:09,421:INFO:_master_model_container: 15
2023-03-14 16:54:09,421:INFO:_display_container: 3
2023-03-14 16:54:09,422:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 16:54:09,422:INFO:tune_model() successfully completed......................................
2023-03-14 16:55:18,747:INFO:Initializing create_model()
2023-03-14 16:55:18,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 16:55:18,748:INFO:Checking exceptions
2023-03-14 16:55:18,775:INFO:Importing libraries
2023-03-14 16:55:18,775:INFO:Copying training dataset
2023-03-14 16:55:18,784:INFO:Defining folds
2023-03-14 16:55:18,785:INFO:Declaring metric variables
2023-03-14 16:55:18,791:INFO:Importing untrained model
2023-03-14 16:55:18,798:INFO:Decision Tree Classifier Imported successfully
2023-03-14 16:55:18,811:INFO:Starting cross validation
2023-03-14 16:55:18,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 16:55:19,473:INFO:Calculating mean and std
2023-03-14 16:55:19,474:INFO:Creating metrics dataframe
2023-03-14 16:55:19,480:INFO:Finalizing model
2023-03-14 16:55:19,745:INFO:Creating Dashboard logs
2023-03-14 16:55:19,749:INFO:Model: Decision Tree Classifier
2023-03-14 16:55:19,759:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-03-14 16:55:19,776:INFO:Initializing predict_model()
2023-03-14 16:55:19,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f470511c280>)
2023-03-14 16:55:19,776:INFO:Checking exceptions
2023-03-14 16:55:19,776:INFO:Preloading libraries
2023-03-14 16:55:20,197:INFO:Uploading results into container
2023-03-14 16:55:20,198:INFO:Uploading model into container now
2023-03-14 16:55:20,211:INFO:_master_model_container: 16
2023-03-14 16:55:20,211:INFO:_display_container: 4
2023-03-14 16:55:20,212:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 16:55:20,212:INFO:create_model() successfully completed......................................
2023-03-14 17:00:22,668:INFO:Initializing tune_model()
2023-03-14 17:00:22,669:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid={'criterions': ['gini', 'entropy'], 'spliter': ['best', 'random'], 'max_leaf_nodes': array([0, 2, 4, 6, 8])}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>)
2023-03-14 17:00:22,669:INFO:Checking exceptions
2023-03-14 17:00:22,703:INFO:Copying training dataset
2023-03-14 17:00:22,711:INFO:Checking base model
2023-03-14 17:00:22,711:INFO:Base model : Decision Tree Classifier
2023-03-14 17:00:22,718:INFO:Declaring metric variables
2023-03-14 17:00:22,724:INFO:Defining Hyperparameters
2023-03-14 17:00:22,860:INFO:custom_grid: {'actual_estimator__criterions': ['gini', 'entropy'], 'actual_estimator__spliter': ['best', 'random'], 'actual_estimator__max_leaf_nodes': array([0, 2, 4, 6, 8])}
2023-03-14 17:00:22,860:INFO:Tuning with n_jobs=-1
2023-03-14 17:00:22,861:INFO:Initializing RandomizedSearchCV
2023-03-14 17:01:31,055:INFO:Initializing tune_model()
2023-03-14 17:01:31,055:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid={'criterions': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_leaf_nodes': array([0, 2, 4, 6, 8])}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>)
2023-03-14 17:01:31,055:INFO:Checking exceptions
2023-03-14 17:01:31,089:INFO:Copying training dataset
2023-03-14 17:01:31,096:INFO:Checking base model
2023-03-14 17:01:31,096:INFO:Base model : Decision Tree Classifier
2023-03-14 17:01:31,104:INFO:Declaring metric variables
2023-03-14 17:01:31,111:INFO:Defining Hyperparameters
2023-03-14 17:01:31,514:INFO:custom_grid: {'actual_estimator__criterions': ['gini', 'entropy'], 'actual_estimator__splitter': ['best', 'random'], 'actual_estimator__max_leaf_nodes': array([0, 2, 4, 6, 8])}
2023-03-14 17:01:31,514:INFO:Tuning with n_jobs=-1
2023-03-14 17:01:31,514:INFO:Initializing RandomizedSearchCV
2023-03-14 17:02:08,872:INFO:Initializing tune_model()
2023-03-14 17:02:08,873:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid={'criterions': ['gini', 'entropy'], 'splitter': ['best', 'random']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>)
2023-03-14 17:02:08,873:INFO:Checking exceptions
2023-03-14 17:02:08,914:INFO:Copying training dataset
2023-03-14 17:02:08,923:INFO:Checking base model
2023-03-14 17:02:08,923:INFO:Base model : Decision Tree Classifier
2023-03-14 17:02:08,931:INFO:Declaring metric variables
2023-03-14 17:02:08,939:INFO:Defining Hyperparameters
2023-03-14 17:02:09,331:INFO:custom_grid: {'actual_estimator__criterions': ['gini', 'entropy'], 'actual_estimator__splitter': ['best', 'random']}
2023-03-14 17:02:09,332:INFO:Tuning with n_jobs=-1
2023-03-14 17:02:09,332:INFO:Initializing RandomizedSearchCV
2023-03-14 17:02:09,337:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/model_selection/_search.py:305: UserWarning: The total space of parameters 4 is smaller than n_iter=10. Running 4 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2023-03-14 17:02:26,443:INFO:Initializing tune_model()
2023-03-14 17:02:26,444:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>)
2023-03-14 17:02:26,444:INFO:Checking exceptions
2023-03-14 17:02:26,475:INFO:Copying training dataset
2023-03-14 17:02:26,481:INFO:Checking base model
2023-03-14 17:02:26,481:INFO:Base model : Decision Tree Classifier
2023-03-14 17:02:26,487:INFO:Declaring metric variables
2023-03-14 17:02:26,492:INFO:Defining Hyperparameters
2023-03-14 17:02:26,683:INFO:custom_grid: {'actual_estimator__criterion': ['gini', 'entropy'], 'actual_estimator__splitter': ['best', 'random']}
2023-03-14 17:02:26,683:INFO:Tuning with n_jobs=-1
2023-03-14 17:02:26,683:INFO:Initializing RandomizedSearchCV
2023-03-14 17:02:26,687:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/model_selection/_search.py:305: UserWarning: The total space of parameters 4 is smaller than n_iter=10. Running 4 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2023-03-14 17:02:31,229:INFO:best_params: {'actual_estimator__splitter': 'best', 'actual_estimator__criterion': 'gini'}
2023-03-14 17:02:31,230:INFO:Hyperparameter search completed
2023-03-14 17:02:31,230:INFO:SubProcess create_model() called ==================================
2023-03-14 17:02:31,231:INFO:Initializing create_model()
2023-03-14 17:02:31,231:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f46e79bbac0>, model_only=True, return_train_score=False, kwargs={'splitter': 'best', 'criterion': 'gini'})
2023-03-14 17:02:31,231:INFO:Checking exceptions
2023-03-14 17:02:31,231:INFO:Importing libraries
2023-03-14 17:02:31,231:INFO:Copying training dataset
2023-03-14 17:02:31,237:INFO:Defining folds
2023-03-14 17:02:31,237:INFO:Declaring metric variables
2023-03-14 17:02:31,240:INFO:Importing untrained model
2023-03-14 17:02:31,241:INFO:Declaring custom model
2023-03-14 17:02:31,247:INFO:Decision Tree Classifier Imported successfully
2023-03-14 17:02:31,259:INFO:Starting cross validation
2023-03-14 17:02:31,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:02:31,664:INFO:Calculating mean and std
2023-03-14 17:02:31,666:INFO:Creating metrics dataframe
2023-03-14 17:02:31,670:INFO:Finalizing model
2023-03-14 17:02:31,859:INFO:Uploading results into container
2023-03-14 17:02:31,860:INFO:Uploading model into container now
2023-03-14 17:02:31,860:INFO:_master_model_container: 17
2023-03-14 17:02:31,860:INFO:_display_container: 5
2023-03-14 17:02:31,860:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:02:31,860:INFO:create_model() successfully completed......................................
2023-03-14 17:02:32,002:INFO:SubProcess create_model() end ==================================
2023-03-14 17:02:32,002:INFO:choose_better activated
2023-03-14 17:02:32,004:INFO:SubProcess create_model() called ==================================
2023-03-14 17:02:32,005:INFO:Initializing create_model()
2023-03-14 17:02:32,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:02:32,005:INFO:Checking exceptions
2023-03-14 17:02:32,006:INFO:Importing libraries
2023-03-14 17:02:32,006:INFO:Copying training dataset
2023-03-14 17:02:32,011:INFO:Defining folds
2023-03-14 17:02:32,011:INFO:Declaring metric variables
2023-03-14 17:02:32,011:INFO:Importing untrained model
2023-03-14 17:02:32,011:INFO:Declaring custom model
2023-03-14 17:02:32,011:INFO:Decision Tree Classifier Imported successfully
2023-03-14 17:02:32,011:INFO:Starting cross validation
2023-03-14 17:02:32,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:02:32,326:INFO:Calculating mean and std
2023-03-14 17:02:32,326:INFO:Creating metrics dataframe
2023-03-14 17:02:32,328:INFO:Finalizing model
2023-03-14 17:02:32,474:INFO:Uploading results into container
2023-03-14 17:02:32,474:INFO:Uploading model into container now
2023-03-14 17:02:32,474:INFO:_master_model_container: 18
2023-03-14 17:02:32,475:INFO:_display_container: 6
2023-03-14 17:02:32,475:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:02:32,475:INFO:create_model() successfully completed......................................
2023-03-14 17:02:32,602:INFO:SubProcess create_model() end ==================================
2023-03-14 17:02:32,602:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 1.0
2023-03-14 17:02:32,602:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 1.0
2023-03-14 17:02:32,603:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') is best model
2023-03-14 17:02:32,603:INFO:choose_better completed
2023-03-14 17:02:32,603:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-03-14 17:02:32,603:INFO:Creating Dashboard logs
2023-03-14 17:02:32,606:INFO:Model: Decision Tree Classifier
2023-03-14 17:02:32,612:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-03-14 17:02:32,622:INFO:Initializing predict_model()
2023-03-14 17:02:32,622:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e4e4bb50>)
2023-03-14 17:02:32,622:INFO:Checking exceptions
2023-03-14 17:02:32,622:INFO:Preloading libraries
2023-03-14 17:02:32,982:INFO:_master_model_container: 18
2023-03-14 17:02:32,982:INFO:_display_container: 5
2023-03-14 17:02:32,982:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:02:32,982:INFO:tune_model() successfully completed......................................
2023-03-14 17:04:00,726:INFO:Initializing plot_model()
2023-03-14 17:04:00,727:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, system=True)
2023-03-14 17:04:00,727:INFO:Checking exceptions
2023-03-14 17:04:00,735:INFO:Preloading libraries
2023-03-14 17:04:00,736:INFO:Copying training dataset
2023-03-14 17:04:00,736:INFO:Plot type: auc
2023-03-14 17:04:01,098:INFO:Fitting Model
2023-03-14 17:04:01,099:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-03-14 17:04:01,099:INFO:Scoring test/hold-out set
2023-03-14 17:04:01,330:INFO:Visual Rendered Successfully
2023-03-14 17:04:01,696:INFO:plot_model() successfully completed......................................
2023-03-14 17:04:28,919:INFO:Initializing plot_model()
2023-03-14 17:04:28,919:INFO:plot_model(plot=residuals_interactive, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, system=True)
2023-03-14 17:04:28,919:INFO:Checking exceptions
2023-03-14 17:07:16,743:INFO:Initializing plot_model()
2023-03-14 17:07:16,745:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, system=True)
2023-03-14 17:07:16,745:INFO:Checking exceptions
2023-03-14 17:07:16,749:INFO:Preloading libraries
2023-03-14 17:07:16,750:INFO:Copying training dataset
2023-03-14 17:07:16,750:INFO:Plot type: confusion_matrix
2023-03-14 17:07:17,106:INFO:Fitting Model
2023-03-14 17:07:17,106:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-03-14 17:07:17,107:INFO:Scoring test/hold-out set
2023-03-14 17:07:17,227:INFO:Visual Rendered Successfully
2023-03-14 17:07:17,389:INFO:plot_model() successfully completed......................................
2023-03-14 17:14:17,408:INFO:Initializing plot_model()
2023-03-14 17:14:17,409:INFO:plot_model(plot=features, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, system=True)
2023-03-14 17:14:17,409:INFO:Checking exceptions
2023-03-14 17:14:32,782:INFO:Initializing plot_model()
2023-03-14 17:14:32,782:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e6c43cd0>, system=True)
2023-03-14 17:14:32,782:INFO:Checking exceptions
2023-03-14 17:14:32,790:INFO:Preloading libraries
2023-03-14 17:14:32,790:INFO:Copying training dataset
2023-03-14 17:14:32,791:INFO:Plot type: feature
2023-03-14 17:14:33,147:INFO:Visual Rendered Successfully
2023-03-14 17:14:33,300:INFO:plot_model() successfully completed......................................
2023-03-14 17:15:30,241:INFO:PyCaret ClassificationExperiment
2023-03-14 17:15:30,241:INFO:Logging name: titanic_1
2023-03-14 17:15:30,241:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-14 17:15:30,241:INFO:version 3.0.0.rc9
2023-03-14 17:15:30,241:INFO:Initializing setup()
2023-03-14 17:15:30,241:INFO:self.USI: 7c35
2023-03-14 17:15:30,241:INFO:self._variable_keys: {'fold_shuffle_param', 'pipeline', '_available_plots', 'X_test', 'USI', 'n_jobs_param', 'y_train', 'exp_id', 'seed', 'data', 'gpu_n_jobs_param', 'exp_name_log', 'fold_generator', 'logging_param', 'idx', 'target_param', 'y_test', 'memory', 'html_param', 'fold_groups_param', 'y', 'X_train', 'fix_imbalance', '_ml_usecase', 'is_multiclass', 'X', 'gpu_param', 'log_plots_param'}
2023-03-14 17:15:30,241:INFO:Checking environment
2023-03-14 17:15:30,241:INFO:python_version: 3.10.6
2023-03-14 17:15:30,241:INFO:python_build: ('main', 'Nov 14 2022 16:10:14')
2023-03-14 17:15:30,241:INFO:machine: x86_64
2023-03-14 17:15:30,241:INFO:platform: Linux-5.19.0-35-generic-x86_64-with-glibc2.35
2023-03-14 17:15:30,242:INFO:Memory: svmem(total=16160448512, available=7694131200, percent=52.4, used=7908515840, free=2633084928, active=3195072512, inactive=8024297472, buffers=423878656, cached=5194969088, shared=219017216, slab=912179200)
2023-03-14 17:15:30,243:INFO:Physical Core: 8
2023-03-14 17:15:30,243:INFO:Logical Core: 16
2023-03-14 17:15:30,243:INFO:Checking libraries
2023-03-14 17:15:30,243:INFO:System:
2023-03-14 17:15:30,243:INFO:    python: 3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
2023-03-14 17:15:30,243:INFO:executable: /home/nalaminos/Entornos/mlops-titanic/bin/python3
2023-03-14 17:15:30,243:INFO:   machine: Linux-5.19.0-35-generic-x86_64-with-glibc2.35
2023-03-14 17:15:30,243:INFO:PyCaret required dependencies:
2023-03-14 17:15:30,243:INFO:                 pip: 22.0.2
2023-03-14 17:15:30,243:INFO:          setuptools: 59.6.0
2023-03-14 17:15:30,243:INFO:             pycaret: 3.0.0rc9
2023-03-14 17:15:30,244:INFO:             IPython: 8.11.0
2023-03-14 17:15:30,244:INFO:          ipywidgets: 8.0.4
2023-03-14 17:15:30,244:INFO:                tqdm: 4.64.1
2023-03-14 17:15:30,244:INFO:               numpy: 1.23.5
2023-03-14 17:15:30,244:INFO:              pandas: 1.5.3
2023-03-14 17:15:30,244:INFO:              jinja2: 3.1.2
2023-03-14 17:15:30,244:INFO:               scipy: 1.9.3
2023-03-14 17:15:30,244:INFO:              joblib: 1.2.0
2023-03-14 17:15:30,244:INFO:             sklearn: 1.2.2
2023-03-14 17:15:30,244:INFO:                pyod: 1.0.8
2023-03-14 17:15:30,244:INFO:            imblearn: 0.10.1
2023-03-14 17:15:30,244:INFO:   category_encoders: 2.6.0
2023-03-14 17:15:30,244:INFO:            lightgbm: 3.3.5
2023-03-14 17:15:30,244:INFO:               numba: 0.56.4
2023-03-14 17:15:30,244:INFO:            requests: 2.28.2
2023-03-14 17:15:30,244:INFO:          matplotlib: 3.6.3
2023-03-14 17:15:30,244:INFO:          scikitplot: 0.3.7
2023-03-14 17:15:30,244:INFO:         yellowbrick: 1.5
2023-03-14 17:15:30,244:INFO:              plotly: 5.13.1
2023-03-14 17:15:30,244:INFO:             kaleido: 0.2.1
2023-03-14 17:15:30,244:INFO:         statsmodels: 0.13.5
2023-03-14 17:15:30,244:INFO:              sktime: 0.16.1
2023-03-14 17:15:30,244:INFO:               tbats: 1.1.2
2023-03-14 17:15:30,244:INFO:            pmdarima: 2.0.2
2023-03-14 17:15:30,244:INFO:              psutil: 5.9.4
2023-03-14 17:15:30,244:INFO:PyCaret optional dependencies:
2023-03-14 17:15:30,244:INFO:                shap: 0.41.0
2023-03-14 17:15:30,244:INFO:           interpret: Not installed
2023-03-14 17:15:30,244:INFO:                umap: Not installed
2023-03-14 17:15:30,244:INFO:    pandas_profiling: 4.1.0
2023-03-14 17:15:30,244:INFO:  explainerdashboard: Not installed
2023-03-14 17:15:30,244:INFO:             autoviz: Not installed
2023-03-14 17:15:30,245:INFO:           fairlearn: Not installed
2023-03-14 17:15:30,245:INFO:             xgboost: Not installed
2023-03-14 17:15:30,245:INFO:            catboost: Not installed
2023-03-14 17:15:30,245:INFO:              kmodes: Not installed
2023-03-14 17:15:30,245:INFO:             mlxtend: Not installed
2023-03-14 17:15:30,245:INFO:       statsforecast: Not installed
2023-03-14 17:15:30,245:INFO:        tune_sklearn: Not installed
2023-03-14 17:15:30,245:INFO:                 ray: Not installed
2023-03-14 17:15:30,245:INFO:            hyperopt: Not installed
2023-03-14 17:15:30,245:INFO:              optuna: Not installed
2023-03-14 17:15:30,245:INFO:               skopt: Not installed
2023-03-14 17:15:30,245:INFO:              mlflow: 2.2.2
2023-03-14 17:15:30,245:INFO:              gradio: Not installed
2023-03-14 17:15:30,245:INFO:             fastapi: Not installed
2023-03-14 17:15:30,245:INFO:             uvicorn: Not installed
2023-03-14 17:15:30,245:INFO:              m2cgen: Not installed
2023-03-14 17:15:30,245:INFO:           evidently: Not installed
2023-03-14 17:15:30,245:INFO:               fugue: Not installed
2023-03-14 17:15:30,245:INFO:           streamlit: Not installed
2023-03-14 17:15:30,245:INFO:             prophet: Not installed
2023-03-14 17:15:30,245:INFO:None
2023-03-14 17:15:30,245:INFO:Set up data.
2023-03-14 17:15:30,259:INFO:Set up train/test split.
2023-03-14 17:15:30,267:INFO:Set up index.
2023-03-14 17:15:30,268:INFO:Set up folding strategy.
2023-03-14 17:15:30,268:INFO:Assigning column types.
2023-03-14 17:15:30,274:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-14 17:15:30,338:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-14 17:15:30,339:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 17:15:30,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-14 17:15:30,446:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 17:15:30,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,488:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-14 17:15:30,553:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 17:15:30,591:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-14 17:15:30,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,695:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-14 17:15:30,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:30,900:INFO:Preparing preprocessing pipeline...
2023-03-14 17:15:30,902:INFO:Set up simple imputation.
2023-03-14 17:15:30,906:INFO:Set up encoding of ordinal features.
2023-03-14 17:15:30,908:INFO:Set up encoding of categorical features.
2023-03-14 17:15:30,909:INFO:Set up removing multicollinearity.
2023-03-14 17:15:30,909:INFO:Set up column transformation.
2023-03-14 17:15:30,909:INFO:Set up feature normalization.
2023-03-14 17:15:31,134:INFO:Finished creating preprocessing pipeline.
2023-03-14 17:15:31,163:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-03-14 17:15:31,163:INFO:Creating final display dataframe.
2023-03-14 17:15:31,852:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target         survived
2                   Target type           Binary
3           Original data shape        (802, 15)
4        Transformed data shape        (802, 25)
5   Transformed train set shape        (561, 25)
6    Transformed test set shape        (241, 25)
7              Ordinal features                2
8              Numeric features                5
9          Categorical features                7
10     Rows with missing values            79.8%
11                   Preprocess             True
12              Imputation type           simple
13           Numeric imputation             mean
14       Categorical imputation             mode
15     Maximum one-hot encoding               25
16              Encoding method             None
17     Remove multicollinearity             True
18  Multicollinearity threshold             0.95
19               Transformation             True
20        Transformation method      yeo-johnson
21                    Normalize             True
22             Normalize method           zscore
23               Fold Generator  StratifiedKFold
24                  Fold Number               10
25                     CPU Jobs               -1
26                      Use GPU            False
27               Log Experiment     MlflowLogger
28              Experiment Name        titanic_1
29                          USI             7c35
2023-03-14 17:15:31,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:31,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:32,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:32,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-14 17:15:32,068:INFO:Logging experiment in loggers
2023-03-14 17:15:32,084:INFO:SubProcess save_model() called ==================================
2023-03-14 17:15:32,139:INFO:Initializing save_model()
2023-03-14 17:15:32,139:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), model_name=/tmp/tmp_vbq8hez/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-03-14 17:15:32,139:INFO:Adding model into prep_pipe
2023-03-14 17:15:32,141:WARNING:Only Model saved as it was a pipeline.
2023-03-14 17:15:32,155:INFO:/tmp/tmp_vbq8hez/Transformation Pipeline.pkl saved in current working directory
2023-03-14 17:15:32,182:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-03-14 17:15:32,182:INFO:save_model() successfully completed......................................
2023-03-14 17:15:32,341:INFO:SubProcess save_model() end ==================================
2023-03-14 17:15:32,345:INFO:setup() successfully completed in 1.83s...............
2023-03-14 17:15:35,021:INFO:Initializing compare_models()
2023-03-14 17:15:35,021:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, 'include': None, 'exclude': ['svm'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['svm'])
2023-03-14 17:15:35,021:INFO:Checking exceptions
2023-03-14 17:15:35,028:INFO:Preparing display monitor
2023-03-14 17:15:35,072:INFO:Initializing Logistic Regression
2023-03-14 17:15:35,072:INFO:Total runtime is 7.482369740804036e-06 minutes
2023-03-14 17:15:35,079:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:35,080:INFO:Initializing create_model()
2023-03-14 17:15:35,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:35,080:INFO:Checking exceptions
2023-03-14 17:15:35,080:INFO:Importing libraries
2023-03-14 17:15:35,080:INFO:Copying training dataset
2023-03-14 17:15:35,090:INFO:Defining folds
2023-03-14 17:15:35,090:INFO:Declaring metric variables
2023-03-14 17:15:35,096:INFO:Importing untrained model
2023-03-14 17:15:35,104:INFO:Logistic Regression Imported successfully
2023-03-14 17:15:35,116:INFO:Starting cross validation
2023-03-14 17:15:35,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:38,149:INFO:Calculating mean and std
2023-03-14 17:15:38,151:INFO:Creating metrics dataframe
2023-03-14 17:15:38,157:INFO:Uploading results into container
2023-03-14 17:15:38,158:INFO:Uploading model into container now
2023-03-14 17:15:38,159:INFO:_master_model_container: 1
2023-03-14 17:15:38,159:INFO:_display_container: 2
2023-03-14 17:15:38,159:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:15:38,160:INFO:create_model() successfully completed......................................
2023-03-14 17:15:38,331:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:38,331:INFO:Creating metrics dataframe
2023-03-14 17:15:38,338:INFO:Initializing K Neighbors Classifier
2023-03-14 17:15:38,338:INFO:Total runtime is 0.05444713830947876 minutes
2023-03-14 17:15:38,342:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:38,342:INFO:Initializing create_model()
2023-03-14 17:15:38,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:38,342:INFO:Checking exceptions
2023-03-14 17:15:38,342:INFO:Importing libraries
2023-03-14 17:15:38,342:INFO:Copying training dataset
2023-03-14 17:15:38,348:INFO:Defining folds
2023-03-14 17:15:38,349:INFO:Declaring metric variables
2023-03-14 17:15:38,353:INFO:Importing untrained model
2023-03-14 17:15:38,357:INFO:K Neighbors Classifier Imported successfully
2023-03-14 17:15:38,365:INFO:Starting cross validation
2023-03-14 17:15:38,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:39,958:INFO:Calculating mean and std
2023-03-14 17:15:39,960:INFO:Creating metrics dataframe
2023-03-14 17:15:39,965:INFO:Uploading results into container
2023-03-14 17:15:39,966:INFO:Uploading model into container now
2023-03-14 17:15:39,967:INFO:_master_model_container: 2
2023-03-14 17:15:39,967:INFO:_display_container: 2
2023-03-14 17:15:39,968:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-03-14 17:15:39,968:INFO:create_model() successfully completed......................................
2023-03-14 17:15:40,125:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:40,125:INFO:Creating metrics dataframe
2023-03-14 17:15:40,132:INFO:Initializing Naive Bayes
2023-03-14 17:15:40,132:INFO:Total runtime is 0.0843470573425293 minutes
2023-03-14 17:15:40,135:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:40,135:INFO:Initializing create_model()
2023-03-14 17:15:40,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:40,135:INFO:Checking exceptions
2023-03-14 17:15:40,135:INFO:Importing libraries
2023-03-14 17:15:40,136:INFO:Copying training dataset
2023-03-14 17:15:40,140:INFO:Defining folds
2023-03-14 17:15:40,140:INFO:Declaring metric variables
2023-03-14 17:15:40,142:INFO:Importing untrained model
2023-03-14 17:15:40,146:INFO:Naive Bayes Imported successfully
2023-03-14 17:15:40,152:INFO:Starting cross validation
2023-03-14 17:15:40,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:40,752:INFO:Calculating mean and std
2023-03-14 17:15:40,754:INFO:Creating metrics dataframe
2023-03-14 17:15:40,757:INFO:Uploading results into container
2023-03-14 17:15:40,757:INFO:Uploading model into container now
2023-03-14 17:15:40,758:INFO:_master_model_container: 3
2023-03-14 17:15:40,758:INFO:_display_container: 2
2023-03-14 17:15:40,758:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-03-14 17:15:40,758:INFO:create_model() successfully completed......................................
2023-03-14 17:15:40,914:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:40,914:INFO:Creating metrics dataframe
2023-03-14 17:15:40,922:INFO:Initializing Decision Tree Classifier
2023-03-14 17:15:40,922:INFO:Total runtime is 0.09751226504643759 minutes
2023-03-14 17:15:40,926:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:40,926:INFO:Initializing create_model()
2023-03-14 17:15:40,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:40,926:INFO:Checking exceptions
2023-03-14 17:15:40,926:INFO:Importing libraries
2023-03-14 17:15:40,926:INFO:Copying training dataset
2023-03-14 17:15:40,931:INFO:Defining folds
2023-03-14 17:15:40,932:INFO:Declaring metric variables
2023-03-14 17:15:40,935:INFO:Importing untrained model
2023-03-14 17:15:40,940:INFO:Decision Tree Classifier Imported successfully
2023-03-14 17:15:40,946:INFO:Starting cross validation
2023-03-14 17:15:40,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:41,545:INFO:Calculating mean and std
2023-03-14 17:15:41,547:INFO:Creating metrics dataframe
2023-03-14 17:15:41,549:INFO:Uploading results into container
2023-03-14 17:15:41,550:INFO:Uploading model into container now
2023-03-14 17:15:41,550:INFO:_master_model_container: 4
2023-03-14 17:15:41,550:INFO:_display_container: 2
2023-03-14 17:15:41,550:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:15:41,550:INFO:create_model() successfully completed......................................
2023-03-14 17:15:41,682:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:41,682:INFO:Creating metrics dataframe
2023-03-14 17:15:41,690:INFO:Initializing Ridge Classifier
2023-03-14 17:15:41,690:INFO:Total runtime is 0.11030589739481608 minutes
2023-03-14 17:15:41,693:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:41,693:INFO:Initializing create_model()
2023-03-14 17:15:41,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:41,693:INFO:Checking exceptions
2023-03-14 17:15:41,693:INFO:Importing libraries
2023-03-14 17:15:41,693:INFO:Copying training dataset
2023-03-14 17:15:41,698:INFO:Defining folds
2023-03-14 17:15:41,698:INFO:Declaring metric variables
2023-03-14 17:15:41,702:INFO:Importing untrained model
2023-03-14 17:15:41,705:INFO:Ridge Classifier Imported successfully
2023-03-14 17:15:41,711:INFO:Starting cross validation
2023-03-14 17:15:41,712:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:42,206:INFO:Calculating mean and std
2023-03-14 17:15:42,207:INFO:Creating metrics dataframe
2023-03-14 17:15:42,213:INFO:Uploading results into container
2023-03-14 17:15:42,213:INFO:Uploading model into container now
2023-03-14 17:15:42,214:INFO:_master_model_container: 5
2023-03-14 17:15:42,214:INFO:_display_container: 2
2023-03-14 17:15:42,215:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-03-14 17:15:42,215:INFO:create_model() successfully completed......................................
2023-03-14 17:15:42,376:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:42,376:INFO:Creating metrics dataframe
2023-03-14 17:15:42,386:INFO:Initializing Random Forest Classifier
2023-03-14 17:15:42,386:INFO:Total runtime is 0.12190293868382772 minutes
2023-03-14 17:15:42,388:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:42,389:INFO:Initializing create_model()
2023-03-14 17:15:42,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:42,389:INFO:Checking exceptions
2023-03-14 17:15:42,389:INFO:Importing libraries
2023-03-14 17:15:42,389:INFO:Copying training dataset
2023-03-14 17:15:42,393:INFO:Defining folds
2023-03-14 17:15:42,394:INFO:Declaring metric variables
2023-03-14 17:15:42,397:INFO:Importing untrained model
2023-03-14 17:15:42,400:INFO:Random Forest Classifier Imported successfully
2023-03-14 17:15:42,406:INFO:Starting cross validation
2023-03-14 17:15:42,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:43,710:INFO:Calculating mean and std
2023-03-14 17:15:43,711:INFO:Creating metrics dataframe
2023-03-14 17:15:43,715:INFO:Uploading results into container
2023-03-14 17:15:43,715:INFO:Uploading model into container now
2023-03-14 17:15:43,716:INFO:_master_model_container: 6
2023-03-14 17:15:43,716:INFO:_display_container: 2
2023-03-14 17:15:43,717:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-03-14 17:15:43,717:INFO:create_model() successfully completed......................................
2023-03-14 17:15:43,866:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:43,866:INFO:Creating metrics dataframe
2023-03-14 17:15:43,875:INFO:Initializing Quadratic Discriminant Analysis
2023-03-14 17:15:43,875:INFO:Total runtime is 0.14672183990478516 minutes
2023-03-14 17:15:43,878:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:43,878:INFO:Initializing create_model()
2023-03-14 17:15:43,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:43,878:INFO:Checking exceptions
2023-03-14 17:15:43,878:INFO:Importing libraries
2023-03-14 17:15:43,878:INFO:Copying training dataset
2023-03-14 17:15:43,883:INFO:Defining folds
2023-03-14 17:15:43,883:INFO:Declaring metric variables
2023-03-14 17:15:43,886:INFO:Importing untrained model
2023-03-14 17:15:43,889:INFO:Quadratic Discriminant Analysis Imported successfully
2023-03-14 17:15:43,895:INFO:Starting cross validation
2023-03-14 17:15:43,896:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:44,176:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,208:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,211:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,257:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,263:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,285:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,287:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,301:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,304:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,317:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-14 17:15:44,575:INFO:Calculating mean and std
2023-03-14 17:15:44,577:INFO:Creating metrics dataframe
2023-03-14 17:15:44,582:INFO:Uploading results into container
2023-03-14 17:15:44,583:INFO:Uploading model into container now
2023-03-14 17:15:44,583:INFO:_master_model_container: 7
2023-03-14 17:15:44,583:INFO:_display_container: 2
2023-03-14 17:15:44,584:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-03-14 17:15:44,584:INFO:create_model() successfully completed......................................
2023-03-14 17:15:44,741:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:44,741:INFO:Creating metrics dataframe
2023-03-14 17:15:44,749:INFO:Initializing Ada Boost Classifier
2023-03-14 17:15:44,749:INFO:Total runtime is 0.16129279136657715 minutes
2023-03-14 17:15:44,752:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:44,752:INFO:Initializing create_model()
2023-03-14 17:15:44,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:44,752:INFO:Checking exceptions
2023-03-14 17:15:44,752:INFO:Importing libraries
2023-03-14 17:15:44,752:INFO:Copying training dataset
2023-03-14 17:15:44,757:INFO:Defining folds
2023-03-14 17:15:44,757:INFO:Declaring metric variables
2023-03-14 17:15:44,760:INFO:Importing untrained model
2023-03-14 17:15:44,763:INFO:Ada Boost Classifier Imported successfully
2023-03-14 17:15:44,770:INFO:Starting cross validation
2023-03-14 17:15:44,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:45,403:INFO:Calculating mean and std
2023-03-14 17:15:45,404:INFO:Creating metrics dataframe
2023-03-14 17:15:45,407:INFO:Uploading results into container
2023-03-14 17:15:45,407:INFO:Uploading model into container now
2023-03-14 17:15:45,408:INFO:_master_model_container: 8
2023-03-14 17:15:45,408:INFO:_display_container: 2
2023-03-14 17:15:45,408:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-03-14 17:15:45,408:INFO:create_model() successfully completed......................................
2023-03-14 17:15:45,548:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:45,549:INFO:Creating metrics dataframe
2023-03-14 17:15:45,558:INFO:Initializing Gradient Boosting Classifier
2023-03-14 17:15:45,558:INFO:Total runtime is 0.1747706691424052 minutes
2023-03-14 17:15:45,561:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:45,561:INFO:Initializing create_model()
2023-03-14 17:15:45,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:45,561:INFO:Checking exceptions
2023-03-14 17:15:45,561:INFO:Importing libraries
2023-03-14 17:15:45,561:INFO:Copying training dataset
2023-03-14 17:15:45,567:INFO:Defining folds
2023-03-14 17:15:45,567:INFO:Declaring metric variables
2023-03-14 17:15:45,571:INFO:Importing untrained model
2023-03-14 17:15:45,575:INFO:Gradient Boosting Classifier Imported successfully
2023-03-14 17:15:45,582:INFO:Starting cross validation
2023-03-14 17:15:45,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:46,438:INFO:Calculating mean and std
2023-03-14 17:15:46,439:INFO:Creating metrics dataframe
2023-03-14 17:15:46,443:INFO:Uploading results into container
2023-03-14 17:15:46,443:INFO:Uploading model into container now
2023-03-14 17:15:46,443:INFO:_master_model_container: 9
2023-03-14 17:15:46,443:INFO:_display_container: 2
2023-03-14 17:15:46,444:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-14 17:15:46,444:INFO:create_model() successfully completed......................................
2023-03-14 17:15:46,580:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:46,580:INFO:Creating metrics dataframe
2023-03-14 17:15:46,589:INFO:Initializing Linear Discriminant Analysis
2023-03-14 17:15:46,589:INFO:Total runtime is 0.19196412165959675 minutes
2023-03-14 17:15:46,592:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:46,592:INFO:Initializing create_model()
2023-03-14 17:15:46,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:46,592:INFO:Checking exceptions
2023-03-14 17:15:46,592:INFO:Importing libraries
2023-03-14 17:15:46,592:INFO:Copying training dataset
2023-03-14 17:15:46,597:INFO:Defining folds
2023-03-14 17:15:46,597:INFO:Declaring metric variables
2023-03-14 17:15:46,600:INFO:Importing untrained model
2023-03-14 17:15:46,603:INFO:Linear Discriminant Analysis Imported successfully
2023-03-14 17:15:46,609:INFO:Starting cross validation
2023-03-14 17:15:46,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:47,299:INFO:Calculating mean and std
2023-03-14 17:15:47,300:INFO:Creating metrics dataframe
2023-03-14 17:15:47,304:INFO:Uploading results into container
2023-03-14 17:15:47,304:INFO:Uploading model into container now
2023-03-14 17:15:47,305:INFO:_master_model_container: 10
2023-03-14 17:15:47,305:INFO:_display_container: 2
2023-03-14 17:15:47,305:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-03-14 17:15:47,305:INFO:create_model() successfully completed......................................
2023-03-14 17:15:47,444:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:47,444:INFO:Creating metrics dataframe
2023-03-14 17:15:47,452:INFO:Initializing Extra Trees Classifier
2023-03-14 17:15:47,452:INFO:Total runtime is 0.2063427964846293 minutes
2023-03-14 17:15:47,455:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:47,455:INFO:Initializing create_model()
2023-03-14 17:15:47,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:47,455:INFO:Checking exceptions
2023-03-14 17:15:47,455:INFO:Importing libraries
2023-03-14 17:15:47,455:INFO:Copying training dataset
2023-03-14 17:15:47,460:INFO:Defining folds
2023-03-14 17:15:47,460:INFO:Declaring metric variables
2023-03-14 17:15:47,463:INFO:Importing untrained model
2023-03-14 17:15:47,465:INFO:Extra Trees Classifier Imported successfully
2023-03-14 17:15:47,471:INFO:Starting cross validation
2023-03-14 17:15:47,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:48,757:INFO:Calculating mean and std
2023-03-14 17:15:48,758:INFO:Creating metrics dataframe
2023-03-14 17:15:48,760:INFO:Uploading results into container
2023-03-14 17:15:48,761:INFO:Uploading model into container now
2023-03-14 17:15:48,762:INFO:_master_model_container: 11
2023-03-14 17:15:48,762:INFO:_display_container: 2
2023-03-14 17:15:48,762:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-03-14 17:15:48,762:INFO:create_model() successfully completed......................................
2023-03-14 17:15:48,909:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:48,909:INFO:Creating metrics dataframe
2023-03-14 17:15:48,918:INFO:Initializing Light Gradient Boosting Machine
2023-03-14 17:15:48,918:INFO:Total runtime is 0.23078054984410604 minutes
2023-03-14 17:15:48,922:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:48,922:INFO:Initializing create_model()
2023-03-14 17:15:48,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:48,922:INFO:Checking exceptions
2023-03-14 17:15:48,922:INFO:Importing libraries
2023-03-14 17:15:48,922:INFO:Copying training dataset
2023-03-14 17:15:48,927:INFO:Defining folds
2023-03-14 17:15:48,928:INFO:Declaring metric variables
2023-03-14 17:15:48,930:INFO:Importing untrained model
2023-03-14 17:15:48,935:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-14 17:15:48,941:INFO:Starting cross validation
2023-03-14 17:15:48,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:49,582:INFO:Calculating mean and std
2023-03-14 17:15:49,583:INFO:Creating metrics dataframe
2023-03-14 17:15:49,585:INFO:Uploading results into container
2023-03-14 17:15:49,586:INFO:Uploading model into container now
2023-03-14 17:15:49,586:INFO:_master_model_container: 12
2023-03-14 17:15:49,586:INFO:_display_container: 2
2023-03-14 17:15:49,586:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-14 17:15:49,586:INFO:create_model() successfully completed......................................
2023-03-14 17:15:49,717:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:49,717:INFO:Creating metrics dataframe
2023-03-14 17:15:49,726:INFO:Initializing Dummy Classifier
2023-03-14 17:15:49,726:INFO:Total runtime is 0.24423722426096597 minutes
2023-03-14 17:15:49,729:INFO:SubProcess create_model() called ==================================
2023-03-14 17:15:49,729:INFO:Initializing create_model()
2023-03-14 17:15:49,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:49,730:INFO:Checking exceptions
2023-03-14 17:15:49,730:INFO:Importing libraries
2023-03-14 17:15:49,730:INFO:Copying training dataset
2023-03-14 17:15:49,734:INFO:Defining folds
2023-03-14 17:15:49,734:INFO:Declaring metric variables
2023-03-14 17:15:49,737:INFO:Importing untrained model
2023-03-14 17:15:49,740:INFO:Dummy Classifier Imported successfully
2023-03-14 17:15:49,745:INFO:Starting cross validation
2023-03-14 17:15:49,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:15:50,179:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,216:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,219:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,227:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,238:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,263:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,303:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,307:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,315:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,317:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-14 17:15:50,320:INFO:Calculating mean and std
2023-03-14 17:15:50,321:INFO:Creating metrics dataframe
2023-03-14 17:15:50,325:INFO:Uploading results into container
2023-03-14 17:15:50,325:INFO:Uploading model into container now
2023-03-14 17:15:50,326:INFO:_master_model_container: 13
2023-03-14 17:15:50,326:INFO:_display_container: 2
2023-03-14 17:15:50,326:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-03-14 17:15:50,326:INFO:create_model() successfully completed......................................
2023-03-14 17:15:50,457:INFO:SubProcess create_model() end ==================================
2023-03-14 17:15:50,458:INFO:Creating metrics dataframe
2023-03-14 17:15:50,475:INFO:Initializing create_model()
2023-03-14 17:15:50,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:15:50,475:INFO:Checking exceptions
2023-03-14 17:15:50,476:INFO:Importing libraries
2023-03-14 17:15:50,476:INFO:Copying training dataset
2023-03-14 17:15:50,481:INFO:Defining folds
2023-03-14 17:15:50,481:INFO:Declaring metric variables
2023-03-14 17:15:50,481:INFO:Importing untrained model
2023-03-14 17:15:50,481:INFO:Declaring custom model
2023-03-14 17:15:50,481:INFO:Logistic Regression Imported successfully
2023-03-14 17:15:50,483:INFO:Cross validation set to False
2023-03-14 17:15:50,483:INFO:Fitting Model
2023-03-14 17:15:50,648:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:15:50,648:INFO:create_model() successfully completed......................................
2023-03-14 17:15:50,804:INFO:Creating Dashboard logs
2023-03-14 17:15:50,808:INFO:Model: Logistic Regression
2023-03-14 17:15:50,818:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-03-14 17:15:50,828:INFO:Initializing predict_model()
2023-03-14 17:15:50,828:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e4dcba30>)
2023-03-14 17:15:50,828:INFO:Checking exceptions
2023-03-14 17:15:50,828:INFO:Preloading libraries
2023-03-14 17:15:51,196:INFO:Creating Dashboard logs
2023-03-14 17:15:51,199:INFO:Model: Decision Tree Classifier
2023-03-14 17:15:51,206:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-03-14 17:15:51,352:INFO:Creating Dashboard logs
2023-03-14 17:15:51,355:INFO:Model: Ridge Classifier
2023-03-14 17:15:51,362:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2023-03-14 17:15:51,510:INFO:Creating Dashboard logs
2023-03-14 17:15:51,513:INFO:Model: str
2023-03-14 17:15:51,520:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-03-14 17:15:51,667:INFO:Creating Dashboard logs
2023-03-14 17:15:51,669:INFO:Model: Gradient Boosting Classifier
2023-03-14 17:15:51,677:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-03-14 17:15:51,825:INFO:Creating Dashboard logs
2023-03-14 17:15:51,828:INFO:Model: Linear Discriminant Analysis
2023-03-14 17:15:51,835:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2023-03-14 17:15:51,994:INFO:Creating Dashboard logs
2023-03-14 17:15:51,997:INFO:Model: Extra Trees Classifier
2023-03-14 17:15:52,004:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-03-14 17:15:52,165:INFO:Creating Dashboard logs
2023-03-14 17:15:52,168:INFO:Model: Light Gradient Boosting Machine
2023-03-14 17:15:52,176:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2023-03-14 17:15:52,331:INFO:Creating Dashboard logs
2023-03-14 17:15:52,333:INFO:Model: Random Forest Classifier
2023-03-14 17:15:52,340:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-03-14 17:15:52,490:INFO:Creating Dashboard logs
2023-03-14 17:15:52,493:INFO:Model: Naive Bayes
2023-03-14 17:15:52,500:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2023-03-14 17:15:52,646:INFO:Creating Dashboard logs
2023-03-14 17:15:52,648:INFO:Model: Quadratic Discriminant Analysis
2023-03-14 17:15:52,655:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2023-03-14 17:15:52,801:INFO:Creating Dashboard logs
2023-03-14 17:15:52,804:INFO:Model: K Neighbors Classifier
2023-03-14 17:15:52,811:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2023-03-14 17:15:52,958:INFO:Creating Dashboard logs
2023-03-14 17:15:52,961:INFO:Model: Dummy Classifier
2023-03-14 17:15:52,968:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2023-03-14 17:15:53,128:INFO:_master_model_container: 13
2023-03-14 17:15:53,128:INFO:_display_container: 2
2023-03-14 17:15:53,129:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:15:53,129:INFO:compare_models() successfully completed......................................
2023-03-14 17:15:57,808:INFO:Initializing tune_model()
2023-03-14 17:15:57,808:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>)
2023-03-14 17:15:57,808:INFO:Checking exceptions
2023-03-14 17:15:57,844:INFO:Copying training dataset
2023-03-14 17:15:57,850:INFO:Checking base model
2023-03-14 17:15:57,851:INFO:Base model : Logistic Regression
2023-03-14 17:15:57,857:INFO:Declaring metric variables
2023-03-14 17:15:57,865:INFO:Defining Hyperparameters
2023-03-14 17:15:58,254:INFO:Tuning with n_jobs=-1
2023-03-14 17:15:58,254:INFO:Initializing RandomizedSearchCV
2023-03-14 17:16:03,533:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.049}
2023-03-14 17:16:03,534:INFO:Hyperparameter search completed
2023-03-14 17:16:03,534:INFO:SubProcess create_model() called ==================================
2023-03-14 17:16:03,535:INFO:Initializing create_model()
2023-03-14 17:16:03,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4704407820>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 0.049})
2023-03-14 17:16:03,536:INFO:Checking exceptions
2023-03-14 17:16:03,536:INFO:Importing libraries
2023-03-14 17:16:03,536:INFO:Copying training dataset
2023-03-14 17:16:03,546:INFO:Defining folds
2023-03-14 17:16:03,546:INFO:Declaring metric variables
2023-03-14 17:16:03,551:INFO:Importing untrained model
2023-03-14 17:16:03,552:INFO:Declaring custom model
2023-03-14 17:16:03,559:INFO:Logistic Regression Imported successfully
2023-03-14 17:16:03,570:INFO:Starting cross validation
2023-03-14 17:16:03,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:16:04,278:INFO:Calculating mean and std
2023-03-14 17:16:04,280:INFO:Creating metrics dataframe
2023-03-14 17:16:04,290:INFO:Finalizing model
2023-03-14 17:16:04,566:INFO:Uploading results into container
2023-03-14 17:16:04,567:INFO:Uploading model into container now
2023-03-14 17:16:04,567:INFO:_master_model_container: 14
2023-03-14 17:16:04,567:INFO:_display_container: 3
2023-03-14 17:16:04,568:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:16:04,568:INFO:create_model() successfully completed......................................
2023-03-14 17:16:04,741:INFO:SubProcess create_model() end ==================================
2023-03-14 17:16:04,741:INFO:choose_better activated
2023-03-14 17:16:04,745:INFO:SubProcess create_model() called ==================================
2023-03-14 17:16:04,746:INFO:Initializing create_model()
2023-03-14 17:16:04,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:16:04,746:INFO:Checking exceptions
2023-03-14 17:16:04,748:INFO:Importing libraries
2023-03-14 17:16:04,748:INFO:Copying training dataset
2023-03-14 17:16:04,753:INFO:Defining folds
2023-03-14 17:16:04,753:INFO:Declaring metric variables
2023-03-14 17:16:04,753:INFO:Importing untrained model
2023-03-14 17:16:04,753:INFO:Declaring custom model
2023-03-14 17:16:04,754:INFO:Logistic Regression Imported successfully
2023-03-14 17:16:04,754:INFO:Starting cross validation
2023-03-14 17:16:04,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:16:05,464:INFO:Calculating mean and std
2023-03-14 17:16:05,465:INFO:Creating metrics dataframe
2023-03-14 17:16:05,469:INFO:Finalizing model
2023-03-14 17:16:05,764:INFO:Uploading results into container
2023-03-14 17:16:05,765:INFO:Uploading model into container now
2023-03-14 17:16:05,765:INFO:_master_model_container: 15
2023-03-14 17:16:05,765:INFO:_display_container: 4
2023-03-14 17:16:05,765:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:16:05,766:INFO:create_model() successfully completed......................................
2023-03-14 17:16:05,946:INFO:SubProcess create_model() end ==================================
2023-03-14 17:16:05,947:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-03-14 17:16:05,947:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-03-14 17:16:05,947:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-03-14 17:16:05,947:INFO:choose_better completed
2023-03-14 17:16:05,948:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-03-14 17:16:05,948:INFO:Creating Dashboard logs
2023-03-14 17:16:05,952:INFO:Model: Logistic Regression
2023-03-14 17:16:05,960:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-03-14 17:16:05,974:INFO:Initializing predict_model()
2023-03-14 17:16:05,974:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e4dcae60>)
2023-03-14 17:16:05,974:INFO:Checking exceptions
2023-03-14 17:16:05,974:INFO:Preloading libraries
2023-03-14 17:16:06,379:INFO:_master_model_container: 15
2023-03-14 17:16:06,380:INFO:_display_container: 3
2023-03-14 17:16:06,380:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:16:06,380:INFO:tune_model() successfully completed......................................
2023-03-14 17:16:44,489:INFO:Initializing create_model()
2023-03-14 17:16:44,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:16:44,489:INFO:Checking exceptions
2023-03-14 17:16:44,531:INFO:Importing libraries
2023-03-14 17:16:44,532:INFO:Copying training dataset
2023-03-14 17:16:44,543:INFO:Defining folds
2023-03-14 17:16:44,543:INFO:Declaring metric variables
2023-03-14 17:16:44,550:INFO:Importing untrained model
2023-03-14 17:16:44,560:INFO:Decision Tree Classifier Imported successfully
2023-03-14 17:16:44,573:INFO:Starting cross validation
2023-03-14 17:16:44,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:16:45,266:INFO:Calculating mean and std
2023-03-14 17:16:45,267:INFO:Creating metrics dataframe
2023-03-14 17:16:45,274:INFO:Finalizing model
2023-03-14 17:16:45,522:INFO:Creating Dashboard logs
2023-03-14 17:16:45,525:INFO:Model: Decision Tree Classifier
2023-03-14 17:16:45,536:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-03-14 17:16:45,555:INFO:Initializing predict_model()
2023-03-14 17:16:45,555:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e4dc9240>)
2023-03-14 17:16:45,555:INFO:Checking exceptions
2023-03-14 17:16:45,555:INFO:Preloading libraries
2023-03-14 17:16:46,051:INFO:Uploading results into container
2023-03-14 17:16:46,052:INFO:Uploading model into container now
2023-03-14 17:16:46,062:INFO:_master_model_container: 16
2023-03-14 17:16:46,063:INFO:_display_container: 4
2023-03-14 17:16:46,063:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:16:46,063:INFO:create_model() successfully completed......................................
2023-03-14 17:16:46,251:INFO:Initializing tune_model()
2023-03-14 17:16:46,252:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>)
2023-03-14 17:16:46,252:INFO:Checking exceptions
2023-03-14 17:16:46,272:INFO:Copying training dataset
2023-03-14 17:16:46,276:INFO:Checking base model
2023-03-14 17:16:46,276:INFO:Base model : Decision Tree Classifier
2023-03-14 17:16:46,279:INFO:Declaring metric variables
2023-03-14 17:16:46,283:INFO:Defining Hyperparameters
2023-03-14 17:16:46,451:INFO:custom_grid: {'actual_estimator__criterion': ['gini', 'entropy'], 'actual_estimator__splitter': ['best', 'random']}
2023-03-14 17:16:46,451:INFO:Tuning with n_jobs=-1
2023-03-14 17:16:46,451:INFO:Initializing RandomizedSearchCV
2023-03-14 17:16:46,454:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/model_selection/_search.py:305: UserWarning: The total space of parameters 4 is smaller than n_iter=10. Running 4 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2023-03-14 17:16:48,360:INFO:best_params: {'actual_estimator__splitter': 'best', 'actual_estimator__criterion': 'gini'}
2023-03-14 17:16:48,361:INFO:Hyperparameter search completed
2023-03-14 17:16:48,361:INFO:SubProcess create_model() called ==================================
2023-03-14 17:16:48,362:INFO:Initializing create_model()
2023-03-14 17:16:48,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f46e780e620>, model_only=True, return_train_score=False, kwargs={'splitter': 'best', 'criterion': 'gini'})
2023-03-14 17:16:48,362:INFO:Checking exceptions
2023-03-14 17:16:48,362:INFO:Importing libraries
2023-03-14 17:16:48,362:INFO:Copying training dataset
2023-03-14 17:16:48,368:INFO:Defining folds
2023-03-14 17:16:48,368:INFO:Declaring metric variables
2023-03-14 17:16:48,371:INFO:Importing untrained model
2023-03-14 17:16:48,371:INFO:Declaring custom model
2023-03-14 17:16:48,375:INFO:Decision Tree Classifier Imported successfully
2023-03-14 17:16:48,383:INFO:Starting cross validation
2023-03-14 17:16:48,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:16:48,959:INFO:Calculating mean and std
2023-03-14 17:16:48,961:INFO:Creating metrics dataframe
2023-03-14 17:16:48,972:INFO:Finalizing model
2023-03-14 17:16:49,254:INFO:Uploading results into container
2023-03-14 17:16:49,255:INFO:Uploading model into container now
2023-03-14 17:16:49,255:INFO:_master_model_container: 17
2023-03-14 17:16:49,255:INFO:_display_container: 5
2023-03-14 17:16:49,256:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:16:49,256:INFO:create_model() successfully completed......................................
2023-03-14 17:16:49,416:INFO:SubProcess create_model() end ==================================
2023-03-14 17:16:49,416:INFO:choose_better activated
2023-03-14 17:16:49,419:INFO:SubProcess create_model() called ==================================
2023-03-14 17:16:49,420:INFO:Initializing create_model()
2023-03-14 17:16:49,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-14 17:16:49,420:INFO:Checking exceptions
2023-03-14 17:16:49,422:INFO:Importing libraries
2023-03-14 17:16:49,422:INFO:Copying training dataset
2023-03-14 17:16:49,427:INFO:Defining folds
2023-03-14 17:16:49,428:INFO:Declaring metric variables
2023-03-14 17:16:49,428:INFO:Importing untrained model
2023-03-14 17:16:49,428:INFO:Declaring custom model
2023-03-14 17:16:49,428:INFO:Decision Tree Classifier Imported successfully
2023-03-14 17:16:49,429:INFO:Starting cross validation
2023-03-14 17:16:49,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-14 17:16:50,073:INFO:Calculating mean and std
2023-03-14 17:16:50,073:INFO:Creating metrics dataframe
2023-03-14 17:16:50,077:INFO:Finalizing model
2023-03-14 17:16:50,350:INFO:Uploading results into container
2023-03-14 17:16:50,350:INFO:Uploading model into container now
2023-03-14 17:16:50,351:INFO:_master_model_container: 18
2023-03-14 17:16:50,351:INFO:_display_container: 6
2023-03-14 17:16:50,351:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:16:50,351:INFO:create_model() successfully completed......................................
2023-03-14 17:16:50,506:INFO:SubProcess create_model() end ==================================
2023-03-14 17:16:50,506:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 1.0
2023-03-14 17:16:50,507:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 1.0
2023-03-14 17:16:50,507:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') is best model
2023-03-14 17:16:50,507:INFO:choose_better completed
2023-03-14 17:16:50,507:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-03-14 17:16:50,507:INFO:Creating Dashboard logs
2023-03-14 17:16:50,512:INFO:Model: Decision Tree Classifier
2023-03-14 17:16:50,522:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-03-14 17:16:50,538:INFO:Initializing predict_model()
2023-03-14 17:16:50,538:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e4e48310>)
2023-03-14 17:16:50,538:INFO:Checking exceptions
2023-03-14 17:16:50,538:INFO:Preloading libraries
2023-03-14 17:16:51,018:INFO:_master_model_container: 18
2023-03-14 17:16:51,018:INFO:_display_container: 5
2023-03-14 17:16:51,018:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-14 17:16:51,019:INFO:tune_model() successfully completed......................................
2023-03-14 17:16:54,314:INFO:Initializing plot_model()
2023-03-14 17:16:54,314:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, system=True)
2023-03-14 17:16:54,314:INFO:Checking exceptions
2023-03-14 17:16:54,323:INFO:Preloading libraries
2023-03-14 17:16:54,324:INFO:Copying training dataset
2023-03-14 17:16:54,324:INFO:Plot type: confusion_matrix
2023-03-14 17:16:54,699:INFO:Fitting Model
2023-03-14 17:16:54,700:WARNING:/home/nalaminos/Entornos/mlops-titanic/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-03-14 17:16:54,700:INFO:Scoring test/hold-out set
2023-03-14 17:16:54,826:INFO:Visual Rendered Successfully
2023-03-14 17:16:55,175:INFO:plot_model() successfully completed......................................
2023-03-14 17:16:56,845:INFO:Initializing plot_model()
2023-03-14 17:16:56,845:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, system=True)
2023-03-14 17:16:56,845:INFO:Checking exceptions
2023-03-14 17:16:56,850:INFO:Preloading libraries
2023-03-14 17:16:56,850:INFO:Copying training dataset
2023-03-14 17:16:56,850:INFO:Plot type: feature
2023-03-14 17:16:57,225:INFO:Visual Rendered Successfully
2023-03-14 17:16:57,382:INFO:plot_model() successfully completed......................................
2023-03-14 17:19:10,021:INFO:Initializing predict_model()
2023-03-14 17:19:10,021:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e79a4820>)
2023-03-14 17:19:10,021:INFO:Checking exceptions
2023-03-14 17:19:10,022:INFO:Preloading libraries
2023-03-14 17:23:50,283:INFO:Initializing finalize_model()
2023-03-14 17:23:50,283:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-03-14 17:23:50,283:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:23:50,288:INFO:Initializing create_model()
2023-03-14 17:23:50,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-03-14 17:23:50,288:INFO:Checking exceptions
2023-03-14 17:23:50,291:INFO:Importing libraries
2023-03-14 17:23:50,291:INFO:Copying training dataset
2023-03-14 17:23:50,291:INFO:Defining folds
2023-03-14 17:23:50,291:INFO:Declaring metric variables
2023-03-14 17:23:50,292:INFO:Importing untrained model
2023-03-14 17:23:50,292:INFO:Declaring custom model
2023-03-14 17:23:50,292:INFO:Logistic Regression Imported successfully
2023-03-14 17:23:50,295:INFO:Cross validation set to False
2023-03-14 17:23:50,296:INFO:Fitting Model
2023-03-14 17:23:50,646:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 17:23:50,646:INFO:create_model() successfully completed......................................
2023-03-14 17:23:50,984:INFO:Creating Dashboard logs
2023-03-14 17:23:50,985:INFO:Model: Logistic Regression
2023-03-14 17:23:50,996:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-03-14 17:23:51,364:INFO:_master_model_container: 18
2023-03-14 17:23:51,364:INFO:_display_container: 6
2023-03-14 17:23:51,399:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 17:23:51,399:INFO:finalize_model() successfully completed......................................
2023-03-14 17:24:04,356:INFO:Initializing finalize_model()
2023-03-14 17:24:04,356:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-03-14 17:24:04,356:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-14 17:24:04,362:INFO:Initializing create_model()
2023-03-14 17:24:04,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-03-14 17:24:04,363:INFO:Checking exceptions
2023-03-14 17:24:04,366:INFO:Importing libraries
2023-03-14 17:24:04,366:INFO:Copying training dataset
2023-03-14 17:24:04,367:INFO:Defining folds
2023-03-14 17:24:04,367:INFO:Declaring metric variables
2023-03-14 17:24:04,367:INFO:Importing untrained model
2023-03-14 17:24:04,367:INFO:Declaring custom model
2023-03-14 17:24:04,368:INFO:Logistic Regression Imported successfully
2023-03-14 17:24:04,372:INFO:Cross validation set to False
2023-03-14 17:24:04,372:INFO:Fitting Model
2023-03-14 17:24:04,716:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 17:24:04,716:INFO:create_model() successfully completed......................................
2023-03-14 17:24:04,902:INFO:Creating Dashboard logs
2023-03-14 17:24:04,903:INFO:Model: Logistic Regression
2023-03-14 17:24:04,913:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-03-14 17:24:05,093:INFO:_master_model_container: 18
2023-03-14 17:24:05,093:INFO:_display_container: 6
2023-03-14 17:24:05,123:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 17:24:05,123:INFO:finalize_model() successfully completed......................................
2023-03-14 17:24:05,348:INFO:Initializing save_model()
2023-03-14 17:24:05,348:INFO:save_model(model=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=../models/secon_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.95))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-03-14 17:24:05,348:INFO:Adding model into prep_pipe
2023-03-14 17:24:05,349:WARNING:Only Model saved as it was a pipeline.
2023-03-14 17:24:05,361:INFO:../models/secon_model.pkl saved in current working directory
2023-03-14 17:24:05,391:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-03-14 17:24:05,391:INFO:save_model() successfully completed......................................
2023-03-14 17:30:58,056:INFO:Initializing predict_model()
2023-03-14 17:30:58,056:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f46e780c1c0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWr...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f46e6e7e050>)
2023-03-14 17:30:58,056:INFO:Checking exceptions
2023-03-14 17:30:58,056:INFO:Preloading libraries
2023-03-14 17:30:58,059:INFO:Set up data.
2023-03-14 17:30:58,070:INFO:Set up index.
